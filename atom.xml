<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亦余Blog</title>
  
  
  <link href="https://couurh.github.io/atom.xml" rel="self"/>
  
  <link href="https://couurh.github.io/"/>
  <updated>2023-10-10T07:39:43.871Z</updated>
  <id>https://couurh.github.io/</id>
  
  <author>
    <name>Couurh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>随身WIFI刷Debian系统</title>
    <link href="https://couurh.github.io/posts/fdc3c2c1.html"/>
    <id>https://couurh.github.io/posts/fdc3c2c1.html</id>
    <published>2022-10-15T04:20:00.000Z</published>
    <updated>2023-10-10T07:39:43.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随身wifi刷机教程"><a href="#随身wifi刷机教程" class="headerlink" title="随身wifi刷机教程"></a>随身wifi刷机教程</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>工具文件可能被系统报毒删除，所以以win10为例，建议新建一个随身WiFi文件夹，然后在Windows安全中心—病毒和威胁防护—病毒威胁防护设置—管理设置—排除项—添加排除项，把文件夹添加进去，然后把刷机文件下载到这里，就不会被系统删除了，其它杀毒软件也可以类似这样设置。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/123353/18/41896/19491/651fda87Fa42a8513/e38480c6901ec1db.jpg"></p><center>防止杀毒软件删除文件</center><p>高通板子刷机需要安装9008驱动和adb驱动，打开并安装文件里的9008driver</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/220202/4/27813/21168/651fda7cFec9e654a/b8d215dbd283b798.jpg"></p><center>安装驱动</center><p>接着是关于adb的使用（本文所有用到的adb命令在文件夹文本里都有），adb全称Android debug bridge，后面很多用到的工具都集成了它，所以换到不同工具时可能会出现adb冲突，这时需要在任务管理器中停掉adb/Android debug bridge程序，后面我会提醒，虽然很多工具都集成了adb，但我还是提供了一份谷歌官方的adb工具。打开ADB文件夹到最后，点击地址栏末尾空白，输入cmd再回车就出现命令行界面</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/208384/1/34018/21209/651fdacdF7f2210eb/3ae1362d06075c5a.jpg"></p><center>打开ADB工具</center><p>把板子插上电脑，等待板子完全开机后，输入命令：adb devices<br>如果显示有设备连接就说明adb正常（有些板子adb功能没有打开，可以在本版块搜索开启方法）。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/197862/37/37157/27942/651fdaa8Fd7c0c433/bb7614ea02488166.jpg"></p><center>查看adb是否正常</center><p>两种方法进入9008模式：可以输入命令进：adb reboot edl<br>或者按住板子的恢复键，插入电脑一两秒后听到叮咚一声再松手。在设备管理器里看到端口有9008就表示成功了，需要9008刷机时再开启此端口。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/120971/7/39567/56929/651fdab1Ffda701f8/1c57eedc269cdcc3.jpg"></p><center>9008</center><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>这一步非常重要！不建议新玩家拿到板子后直接刷别人的rom包，而是应该先备份好自己的rom，之后随便刷，只要硬件没坏都能救活。如果自己的板子系统是阉割版的，比如没有热点和网络共享等，可以刷一下别人的system包，其它情况不太需要刷别人的文件。备份主要有三个过程：</p><p>1)用Miko loader制作救砖包以及如何救砖。找到miko文件夹，双击miko安装，直接默认就行了，记住安装路径，安装完成后把文件夹内的loader复制到miko的安装目录，创建loader的快捷方式到桌面</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/192206/36/40170/40744/651fdab0Fe390104b/556f058fdd64887e.jpg"></p><center>复制loader并创建快捷方式</center><p>让板子进入9008模式，打开loader，按照图片数字顺序一步步来</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/135127/39/39618/86030/651fdaecF137a34e8/822ae8c04bee943e.png"></p><center>loader备份</center><p>（点read，partition backup，双击下面double click to open save folder，选好救砖包生成的路径，点load partition structure，点read full image就能制作刷机救砖包，大概5分钟以内），保存好这个名为.bin的单文件。<br>刷机/救砖方法图片也标注了顺序，分别点flash，emmc block0 flasher，double click…..，flash！</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/186395/15/39438/56240/651fdb03Fddb1c159/5b21d2c0bb478e76.jpg"></p><center>刷机或救砖</center><p>2)用Qualcomm Premium Tool 备份全部分区文件，打开它的文件夹，有个提示先注册的程序，注意要把电脑音量调低！然后点开它后可能会提示安装一些东西，同意就行了，没有的话不用管，弹出窗口点击Generate Key，生成的key放在你知道的文件夹内</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/125204/16/38784/16436/651fda84F95e840d9/f116bc90f6d43863.jpg"></p><center>注册机生成key</center><p>打开Qualcomm Premium Tool程序，左上菜单栏找到help—active，选择刚才生成的key就能激活这个软件了</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/95968/22/35868/48145/651fda84Fa6a8e410/a9ae0f0c4bd4ec42.jpg"></p><center>激活工具</center><p>按照前面介绍的方法使板子进入9008模式(不要插卡），在Qualcomm Premium Tool按照图片数字一步一步进行</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/105887/31/40437/175204/651fdb03Fcaf462a1/d2bc226caa650821.png"></p><center>备份步骤顺序</center><p>找qualcomm和partition，在下面点scan，Do job，它会识别显示板子的内部分区，点backup（正常会自动跳到这一项），点do job进行备份。</p><p>有以下几个文件fsc、fsg、modemst1、modemst2、modem（备份后为NON-HLOS.bin），分别重命名为fsc.bin、fsg.bin、modemst1.bin、modemst2.bin、NON-HLOS.img备用。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/91572/9/44268/84823/651fdb02F4f633392/60a0046bf30a2093.png"></p><p>3)备份qcn和root，需要先进行root，简单点的办法就是安装magisk，再刷一下修补过的boot文件就有root了。当然我更建议自己修补boot，不用等别人做好，出问题的概率也更小。下面是如何自己动手获得root权限：<br>首先安装ardc，这是一个投屏软件，解决板子没有屏幕无法操作的问题，它的操作逻辑是鼠标左键为点击功能，右键为返回。安装完ardc后先别打开，检查一下任务管理器中，有adb或者android debug bridge程序在后台的话记得停掉，再把板子插到电脑上正常启动，打开ardc等待画面变化，成功后会停在深蓝色界面，然后把鼠标箭头移到此界面，右键点击两下，如果没有出现桌面，需要安装一个第三方桌面启动器，把我提供的apk文件里的launcher从电脑直接托到ardc界面就会自动给板子安装</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/10823/4/22578/37006/651fda57F5783407b/b80dbdf8cd0ca99c.jpg"></p><center>安装桌面启动器</center><p>等五秒后在主界面点一下鼠标右键，应该会出现选择主屏幕应用选择，点launcher和始终</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/107779/30/44500/14884/651fdaa7F00e2a834/61da388e696359f0.jpg"></p><center>选择默认桌面启动器</center><p>然后就能看到板子的系统界面了，接着安装es文件管理器和magisk，也是直接拖到ardc界面自动安装，装好后点开文件管理器，进入下载文件夹</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/95677/8/37820/20423/651fdaa6F0c05ad4f/18b40c2d1b14aec2.jpg"></p><p>把之前Qualcomm备份的boot文件直接托到这里，就会复制过来了（几秒钟，点下面的刷新就会显示出来）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/88715/9/44961/10496/651fdae9F09032e4f/881f23ecc2b37ac2.jpg"></p><center>复制boot文件到板子</center><p>退出es，点开magisk，找到图片提示的位置</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/179242/33/40037/25376/651fda54F27b5ade9/0b552df02927a8ba.jpg"></p><center>magisk修补boot</center><p>安装&gt;下一步&gt;选择并修补一个文件，选择刚才复制过来的boot，然后开始，等待它修补完成，退出并来到es文件管理器，进入下载，发现修补好的boot文件名太长了，长按后重命名为magiskboot.img<br>再点击ardc菜单最后一个&gt;&gt;; 弹出的cmd这里（实际就是这个软件也集成了adb功能，这里直接使用它的）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/14078/5/30868/40046/651fdad6F9e549a5f/5d8ec7fab320afbf.jpg"></p><center>打开ARDC的ADB功能</center><p>输入命令：adb pull /sdcard/Download/magiskboot.img D:/xxx<br>这里D:/xxx换成你自己的路径（斜杠朝左还是朝右都可以），接着按回车就会把magiskboot.img导出到你的电脑上</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/88750/34/46297/25235/651fda7eF26a90548/068476588d793048.jpg"></p><center>导出magiskboot</center><p>再输入命令：adb reboot bootloader<br>板子会重启到fastboot模式，然后输入命令：fastboot flash boot后再按个空格键，接着把电脑上magiskboot.img拖到这里，会自动生成文件路径名</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/108877/25/45607/33522/651fda52F2914def0/40a73edaafb35f36.jpg"></p><center>刷入修补后的boot</center><p>再按回车等待几秒完成后输入命令：<br>fastboot reboot<br>板子重启后打开magisk（可能得多等会），看到下面四个图标，第二个就是超级用户，那么root就完成了。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/182343/29/39633/13611/651fdaceFdb9cb3c1/7d27d3f50a7b72df.jpg"></p><center>获得root权限</center><p>下面是备份qcn的工作，依然在ARDC的&gt;&gt;这里的cmd后输入命令：adb shell su，然后会显示shell申请权限，点永久就行了，接着在magisk的超级用户里看看shell授权成功与否</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/164692/35/41807/9125/651fda56F0d492a82/ea80475914f73a63.jpg"></p><center>shell授权</center><p>关掉ARDC，同时在任务管理器里如果发现adb还在后台也要关掉。然后打开星海svip这个软件（免安装），如果打开时提示缺少库文件，安装我提供的微软软件包，装好后最好重启一下电脑就能打开星海了，以后如果操作没问题，这个软件还是报错的就重启电脑。<br>选择高通，再点联机会出现设备信息，找到高通强开1，点一键执行，在设备管理器上查看是否有端口901D（如果开启失败可以尝试手动开启，文件夹里有命令代码）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/99554/39/43421/101295/651fdb1cF3a21dd38/ac3c57ac5417364d.jpg"></p><center>强开端口901D </center><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/184084/14/39924/23457/651fdaeaFcfacb18d/6f2f5c4b19878685.jpg"></p><center> 成功开启端口901D</center><p>接着备份qcn，一键执行，选择qcn文件生成路径，正常情况就能备份qcn成功，如果不行就检查901d端口或者重启电脑，备份的qcn一般在500多k，远小于这个大小的应该是备份失败了，建议再来一次。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/171952/3/42066/58157/651fdb02Ff35a2d4e/a5c6db4425c11ed0.jpg"></p><center> 备份qcn</center><h2 id="刷入Debian系统"><a href="#刷入Debian系统" class="headerlink" title="刷入Debian系统"></a>刷入Debian系统</h2><h3 id="拆开棒子看板号"><a href="#拆开棒子看板号" class="headerlink" title="拆开棒子看板号"></a>拆开棒子看板号</h3><p>1.随身WiFi型号是ufi003，寻找对应刷机资源</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/196646/27/39484/3844327/651fdb2aF5cabe5c8/ef8d2602232fb096.jpg"></p><h3 id="刷入Debian"><a href="#刷入Debian" class="headerlink" title="刷入Debian"></a>刷入Debian</h3><p>1.安卓下重启到fastboot，将备份的基带fsc.bin、fsg.bin、modemst1.bin、modemst2.bin替换掉刷Debian系统文件夹里的文件</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/192256/1/39332/177929/651fdb1eF151a5ab2/3406a69f13caccc5.png"></p><p>2.双击一键刷入，按提示刷入即可</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/182722/31/39132/120169/651fdb1cF68579bb3/c58e77dc074d204c.png"></p><p>3.刷入成功后重启，看Windows托盘会变为HandsomeMod</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/104560/25/37448/10159/651fdb1aFeb955d92/ae160e27d0db5c48.png"></p><p>4.设备管理器里应有 基于远程的NDIS的Internet的共享设备</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/217618/30/35041/292275/651fdb4eFa2e491a2/c4090763c71dd708.png"></p><p>5.没有的话在其它设备-未知设备里找到它并更新为基于远程的NDIS的Internet的共享设备</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/84416/28/28391/25247/651fdb4eF17c6c2e4/80bc10774ddeb461.png"></p><p>6.未知设备里也没有的话，按下方步骤</p><p>1，进设备管理器，ADB右键，更新驱动，选择从计算机列表中选取，选择Composite USB Device。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/89289/6/37469/35306/651fdb4fF36502be4/d3fbd3747f119655.jpg"></p><p>2，重新插入设备，设备管理器出现一个未知的设备，右键更新驱动，从计算机列表选取，选网络适配器，取消打勾，选Microsoft，再选基于远程NDIS的internet共享设备。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t20251005/199412/4/36234/52824/651fdb5cF4a425256/35a7284b67745e20.jpg"></p><p>3.插入SIM卡重启，等待两分钟左右看随身WiFi是否可以提供网络给电脑，可以的话说明已经可以使用SIM卡上网了</p><p>4.若还是不读卡（即没有网络），可执行一下命令，若成功联网，则把下方命令放入/etc/rc.local中让其自启</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sleep</span> <span class="hljs-number">3</span><br><span class="hljs-attribute">systemctl</span> stop ModemManager<br><span class="hljs-attribute">sleep</span> <span class="hljs-number">3</span><br><span class="hljs-attribute">qmicli</span> -d /dev/wwan0qmi0 --uim-sim-power-<span class="hljs-literal">off</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">sleep</span> <span class="hljs-number">3</span><br><span class="hljs-attribute">qmicli</span> -d /dev/wwan0qmi0 --uim-sim-power-<span class="hljs-literal">on</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">sleep</span> <span class="hljs-number">3</span><br><span class="hljs-attribute">systemctl</span> start ModemManager<br><span class="hljs-attribute">sleep</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>5.debian下关闭led的方法，把下方命令放入/etc/rc.local中让其自启</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">echo none &gt; /sys/<span class="hljs-keyword">class</span>/<span class="hljs-symbol">leds</span>/<span class="hljs-symbol">red</span>\:<span class="hljs-symbol">os</span>/<span class="hljs-symbol">trigger</span><br><span class="hljs-symbol">echo</span> <span class="hljs-symbol">none</span> &gt; /<span class="hljs-symbol">sys</span>/<span class="hljs-symbol">class</span>/<span class="hljs-symbol">leds</span>/<span class="hljs-symbol">blue</span>\:<span class="hljs-symbol">wifi</span>/<span class="hljs-symbol">trigger</span><br><span class="hljs-symbol">echo</span> <span class="hljs-symbol">none</span> &gt; /<span class="hljs-symbol">sys</span>/<span class="hljs-symbol">class</span>/<span class="hljs-symbol">leds</span>/<span class="hljs-symbol">green</span>\:<span class="hljs-symbol">internet</span>/<span class="hljs-symbol">trigger</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">随身WIFI</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="WIFI" scheme="https://couurh.github.io/tags/WIFI/"/>
    
  </entry>
  
  <entry>
    <title>考试系统-SurveyKing</title>
    <link href="https://couurh.github.io/posts/7496bb98.html"/>
    <id>https://couurh.github.io/posts/7496bb98.html</id>
    <published>2022-08-30T01:50:00.000Z</published>
    <updated>2023-02-18T07:57:10.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考试系统-SurveyKing"><a href="#考试系统-SurveyKing" class="headerlink" title="考试系统-SurveyKing"></a><strong>考试系统-SurveyKing</strong></h2><h3 id="卷王"><a href="#卷王" class="headerlink" title="卷王"></a>卷王</h3><p>功能更强大的调查问卷、考试系统，很多功能体验超过问卷网、问卷星。</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>🥇 支持 20 多种题型，如填空、选择、下拉、级联、矩阵、分页、签名、题组、上传等</li><li>🎉 多种创建问卷方式，Excel导入问卷、文本导入问卷、在线编辑器编辑问卷</li><li>💪 多种问卷设置，支持白名单答卷、公开查询、答卷限制等</li><li>🎇 数据，支持问卷数据新增、编辑、标记、导出、预览和打包下载附件</li><li>🎨 报表，支持对问题实时统计分析并以图形（条形图、柱形图、扇形图）、表格的形式展示输出</li><li>🚀 安装部署简单（<strong>最快 1 分钟部署</strong>），支持 nginx 部署和一键启动的方式</li><li>🥊 响应式布局，所有页面在 PC 和手机端都有良好的操作体验，支持手机端编辑问卷</li><li>👬 支持多人协作管理问卷</li><li>🎁 后端支持多种数据库，可支持所有带有 jdbc 驱动的关系型数据库</li><li>🐯 安全、可靠、稳定、高性能的后端 API 服务</li><li>🙆 支持完善的 RBAC 权限控制</li><li>😊 支持<strong>工作流</strong>，工作流代码已全部开源</li><li>🦋 可计算，分为<strong>逻辑计算</strong>、<strong>值计算</strong>、<strong>文本替换计算</strong>、<strong>必填计算</strong></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><strong>预安装 JRE 环境</strong>，由于本系统是 Java 构建的，需要依赖 Java 运行环境，可以通过 <a href="https://gitee.com/link?target=https://www.java.com/zh-CN/download/manual.jsp">适用于所有操作系统的 Java 下载 </a>来预装 java 环境。</li><li><strong>配置数据库</strong>，按照下面的说明来配置不同的数据库，如果前端需要使用 nginx 部署，参考使用 nginx 部署前端。</li><li><strong>运行</strong>，支持所有平台部署，windows 和 mac 支持双击运行，或者打开命令行窗口执行如下命令</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">java </span>-<span class="hljs-keyword">jar </span>surveyking-<span class="hljs-built_in">v0</span>.x.x.<span class="hljs-keyword">jar</span><br></code></pre></td></tr></table></figure><p>打开start.bat，会自动打开3个窗口，最上面的倒计时窗口会自动关闭，并且自动打开一个网页标签，登录系统之后可以通过用户管理界面来修改密码。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/80143/26/26044/829698/63f05ee9F85225a01/dac292905399a0dc.png"></p><ol><li>下载 <a href="https://www.123pan.com/s/AYLA-IAsOA"> Windows 版下载链接</a>  提取码:hgJr</li><li>解压，双击运行 start.bat</li><li>打开浏览器访问 <a href="https://gitee.com/link?target=http://localhost:1991">http://localhost:1991</a>，输入账号密码： <em>admin</em>/<em>123456</em></li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/143748/22/32582/84913/63f05f86Fb401b949/fd4582d6a2b9ad96.jpg"></p>]]></content>
    
    
    <summary type="html">考试系统</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="刷题" scheme="https://couurh.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>修补Root</title>
    <link href="https://couurh.github.io/posts/38d38c2b.html"/>
    <id>https://couurh.github.io/posts/38d38c2b.html</id>
    <published>2022-06-18T01:42:00.000Z</published>
    <updated>2023-02-18T06:45:39.958Z</updated>
    
    <content type="html"><![CDATA[<h3 id="还原原厂映像"><a href="#还原原厂映像" class="headerlink" title="还原原厂映像"></a><strong>还原原厂映像</strong></h3><p>全量包升级未保留Root后去magisk里面还原原厂映像，然后找到原版boot或解包获取，自行修补</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/194780/38/32156/78159/63f06329F9f8fbad1/ab3258dcd890b69c.jpg"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/147370/24/33961/34355/63f06353F73318ba5/f0db1d25ef466559.jpg"></p><p>点击上面那个安装，然后点击选择一个文件进行修补</p><h3 id="ADB修补boot"><a href="#ADB修补boot" class="headerlink" title="ADB修补boot"></a><strong>ADB修补boot</strong></h3><p>找到你的boot.img文件然后点下一步，他就会开始修补了，等待他修补完成以后，在/storage/emulated/0/Download/这个目录找到修补后的文件，将其传输至电脑上面备用，然后手机进入fastboot模式可以用电脑版搞机助手进入也可以自行手动（按住音量-和电源）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/169153/34/34759/27009/63f06390Fd5e68805/217563bab17c6d14.png"></p><p>然后电脑上面点开文件夹platform-tools在上方目录位置输入cmd然后回车会跳出一个命令框</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/82857/24/19238/70186/63f0638eF309ce279/e750b5d50744b033.png"></p><p>然后在命令框中输入指令fastboot flash boot+文件名</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/131515/20/34979/25148/63f0638fF8bbf6d80/96c0796644f1dfbe.jpg"></p><p>（文件你可以直接拖动你修补好的文件，会自动有完整目录）<br>然后刷完输入fastboot reboot重启后Root恢复</p>]]></content>
    
    
    <summary type="html">适用于丢失Root后恢复Root</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Root" scheme="https://couurh.github.io/tags/Root/"/>
    
  </entry>
  
  <entry>
    <title>办公监控软件联软</title>
    <link href="https://couurh.github.io/posts/a00d34b8.html"/>
    <id>https://couurh.github.io/posts/a00d34b8.html</id>
    <published>2022-05-21T03:35:00.000Z</published>
    <updated>2023-02-18T06:53:08.761Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一步：删除流氓dll"><a href="#第一步：删除流氓dll" class="headerlink" title="第一步：删除流氓dll"></a>第一步：删除流氓dll</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\Windows\LVUAAgentInstBaseRoot\system32\<br><span class="hljs-symbol">C:</span>\Windows\LVUAAgentInstBaseRoot\SysWow64\<br></code></pre></td></tr></table></figure><p>将这两个文件夹中的<code>Vozokopot.dll</code>、<code>MozartBreath*.dll</code>文件都删除<br>这一步比较麻烦，可以尝试<a href="https://imcockpit.lanzoul.com/iQXje05ao79g"><strong>火绒文件粉碎独立版</strong></a> （访问码：3egn）如果无法删除，则需要一个u盘启动盘，用启动盘进入系统删除。</p><p><em>（注：安全模式没用，这个软件在安全模式下也会启动）</em></p><h4 id="第二步：进入系统"><a href="#第二步：进入系统" class="headerlink" title="第二步：进入系统"></a>第二步：进入系统</h4><p>拔出u盘，正常进入系统，此时其<strong>流氓功能已经失效</strong>，水印也去掉了，联网功能正常。如需保留其联网功能，到这一步就可以了。否则彻底卸载后，就连不上办公室的网络了。</p><h4 id="第三步：卸载"><a href="#第三步：卸载" class="headerlink" title="第三步：卸载"></a>第三步：卸载</h4><p>在 <code>C:\Windows\LVUAAgentInstBaseRoot\</code> 找到卸载文件<code>AgentUninstall.exe</code> ，双击卸载。如果提示什么“账户控制”，无法卸载，则使用<a href="https://imcockpit.lanzoul.com/iT5AT05ao9sh"><strong>360软件管家独立版</strong></a> （访问码：fnkw）进行卸载即可。</p><hr><h6 id="问：如何确定办公软件是否是联软？"><a href="#问：如何确定办公软件是否是联软？" class="headerlink" title="问：如何确定办公软件是否是联软？"></a>问：如何确定办公软件是否是联软？</h6><p>办公软件右键关于，可以看到“深圳市联软科技”等字样。或打开任务管理器，存在uniRemote.exe及uniAccessAgent.exe等进程。</p>]]></content>
    
    
    <summary type="html">去水印(win10)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="uniaccessAgent" scheme="https://couurh.github.io/tags/uniaccessAgent/"/>
    
  </entry>
  
  <entry>
    <title>SHamiko隐藏Root</title>
    <link href="https://couurh.github.io/posts/71b31e69.html"/>
    <id>https://couurh.github.io/posts/71b31e69.html</id>
    <published>2022-03-26T03:17:00.000Z</published>
    <updated>2023-02-18T07:05:23.022Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shamiko"><a href="#Shamiko" class="headerlink" title="Shamiko"></a><strong>Shamiko</strong></h3><p>模块名称：shamiko模块</p><p>模块主要功能：Shamiko是一个Zygisk模块，用于隐藏Magisk根、Zygisk本身以及riru hide等Zygisk模块（可以简单理解为在Zygisk模式下仍然可以使用原有的Magisk Hide模式）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/165855/12/33815/52936/63f063b5Febea986f/c690e80f1b2f81e3.jpg"></p><p>版本号：V0.4.4</p><p>大小：213 KB</p><h3 id="安装与激活"><a href="#安装与激活" class="headerlink" title="安装与激活"></a><strong>安装与激活</strong></h3><p>确保你的设备已正确安装Magisk Canary版或alpha版</p><p>Magisk各版本说明</p><p>正式版：正常数字命名</p><p>Canary版：数字+字母命名；正式版发布前的测试版</p><p>alpha版：以alpha命名；Magisk的一个分支，基于测试版开发，兼具Riru和Zygisk模式（推荐这个）</p><p>下载并安装 <a href="https://wwr.lanzoui.com/b02uq3ksf">Shamiko</a> （访问码：mm）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/201553/26/30953/25964/63f063b1F86d0109b/367206a7dc1e30ae.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/66180/33/24023/29811/63f063b6F315975bb/ccf0347dfa24b219.jpg"></p><p>SHamiko黑名单（注：白名单模式性能消耗较高）模式下的隐藏root方案：</p><p>面具随机包名+开启Zygisk+开启遵守排除列表+配置排除列表(排除列表)+安装“SHamiko”模块→重启设备，在“配置排除列表”中添加需要隐藏Magisk的App，之后关闭遵守排除列表</p><p>此时Zygisk的“排除列表”已被Shamiko接管，并且将其转换为“隐藏列表”虽然LSPosed会有“排除列表”的提示，但实际上模块是生效的，列表内的App也无法检测到Magisk，如果你想查看隐藏效果可以使用Momo注入检测工具，检测时别忘了把检测软件加入隐藏列表。</p>]]></content>
    
    
    <summary type="html">隐藏Root</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Magisk" scheme="https://couurh.github.io/tags/Magisk/"/>
    
  </entry>
  
  <entry>
    <title>阿里云盘变本地硬盘</title>
    <link href="https://couurh.github.io/posts/45a15a66.html"/>
    <id>https://couurh.github.io/posts/45a15a66.html</id>
    <published>2022-03-12T12:30:00.000Z</published>
    <updated>2023-02-18T08:06:37.056Z</updated>
    
    <content type="html"><![CDATA[<p>今天带来的是一个好用的工具，此工具可以<strong>把阿里云盘变成本地硬盘</strong><br>功能：查看文件夹大小、使用第三方播放器播放视频、文件重命名、全局下载带宽控制、全盘搜索功能<br>本地上传、本地下载、115秒传迁移到阿里云盘、网络盘、本地盘互换、文件夹灵活挂载等<br>Windows版安装方法：<br>链接：<a href="https://www.aliyundrive.com/s/7UjokGfUEp7">https://www.aliyundrive.com/s/7UjokGfUEp7</a><br>蓝奏：<a href="https://kudoushinichi.lanzouj.com/i3C6S0163dxc">https://kudoushinichi.lanzouj.com/i3C6S0163dxc</a><br>docker版下载地址：<br><a href="https://hub.docker.com/r/cloudnas/clouddrive">https://hub.docker.com/r/cloudnas/clouddrive</a><br>docker版更新方法：<br>docker-compose pull<br>docker-compose up -d</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h3><p>1.上传默认缓存文件到C盘，网页可以查看上传任务，上传完自动删除缓存（网页可以设置缓存位置）<br>2.最好不要直接从网上下载资源到本地挂载的磁盘里（包括百度设置下载目录到挂载磁盘）<br>3.不适合用来打游戏或者在线编辑文档（为了防止文件丢失记得做好备份）<br>4.旧版本可以正常使用就不建议更新新版本了（尝鲜的可以忽视）<br>5.挂载的盘可以选择挂载为本地或者网络盘，自己觉得哪种好用就选哪种(网页设置挂载盘符类型)<br>6.盘符为零字节、网页空白（登陆失效，需要扫码重新登陆）<br>7.经常重新登陆可以试试refresh_token登录(阿里云盘链接里面有登陆教程)<br>8.文件访问卡可以考虑查看方式设置为详细信息查看(鼠标右键查看即可看到)<br>9.登录不了就卸载安装新版本或者安装旧版本看看(密码忘记就重新编个邮箱注册)<br>10.本地上传到网盘，建议从网页添加本地文件夹，然后网页移动文件夹到网盘(不会二次占用本地空间)<br>11.打开文件视频卡和网速有关(没网是运行不了的)</p><h3 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a><strong>更新内容</strong></h3><p>1.不再支持沃家云盘<br>2.暂时取消天翼云盘用户名密码登录功能，请使用二维码登录（天翼云盘用户名密码登录API已改，临时屏蔽）<br>3.修复批量添加离线文件时同名文件只导入一次的问题<br>4.提高115非高峰期下载速度<br>5.net runtime升级到6.0.2<br>6.其它bug修复和性能改进<br>7.修复1.1.59.1带来的阿里云盘扫描二维码无法登录的问题</p><h3 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a><strong>已知问题</strong></h3><p>1.基于musl-libc的系统挂载的目录文件可能存在显示不全，包括openwrt、Alpine Linux等，Web界面不受影响<br>2.直接在网盘上编辑重要文档编辑前请做好备份<br>3.暂时不支持Synology File Station，向Synology通过Samba共享的挂载盘写大文件可能失败<br>以上问题将逐步在后续版本中修复</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/58929/11/23018/57338/63f05c4eF046ed0b6/aa21d268d63c6b15.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/130991/28/35168/323770/63f05c55Fbc9e3aa8/49a55a75233e3115.png"></p>]]></content>
    
    
    <summary type="html">CloudDrive</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Cloud" scheme="https://couurh.github.io/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>天若OCR开源版本地版</title>
    <link href="https://couurh.github.io/posts/f199d335.html"/>
    <id>https://couurh.github.io/posts/f199d335.html</id>
    <published>2022-03-12T07:10:00.000Z</published>
    <updated>2023-02-18T07:55:19.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><p>天若OCR开源版采用了第三方OCR接口，所以必须联网才能识别，识别效果非常不错，需要自己去各大互联网厂商申请key才能使用；</p><p>因此有大佬基于其开源版制作了本地版，无需联网，也无需申请key，纯本地运算。</p><p>本软件开源项目地址：<a href="https://gitee.com/wanglifree/tianruoocr-cl"><strong>tianruoocr-cl</strong></a></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/124384/21/34520/101657/63f062f8F02ee9631/d3ae3da6d8f4c839.png"></p><p><a href="https://imcockpit.lanzoul.com/ivckl01d1azg">天若ocr开源版本的本地版</a> （访问码：9hcq），采用Chinese-lite和paddle-ocr识别，再也不用网络啦</p><p>推荐paddle-ocr识别，可以在识别结果里面切换接口</p><p>主要fork了以下仓库：</p><blockquote><p><a href="https://gitee.com/ZZK-1989/tianruoocr">https://gitee.com/ZZK-1989/tianruoocr</a></p></blockquote><blockquote><p><a href="https://gitee.com/link?target=https://github.com/DayBreak-u/chineseocr_lite/tree/onnx/dotnet_projects/OcrLiteOnnxCs">https://github.com/DayBreak-u/chineseocr_lite/tree/onnx/dotnet_projects/OcrLiteOnnxCs</a></p></blockquote><blockquote><p><a href="https://gitee.com/link?target=https://github.com/RapidAI/RapidOCR">https://github.com/RapidAI/RapidOCR</a></p></blockquote><p>添加了ocr设置</p><h2 id="支持平台"><a href="#支持平台" class="headerlink" title="支持平台"></a>支持平台</h2><p>Win7 ~Win11，软件需要 <code>.net framework 4.7.2</code> 或更高的版本，一般来说已经集成了，如果没有或者精简掉了，请点击下边的链接小卡片下载 ：<a href="https://go.microsoft.com/fwlink/?linkid=2088631"><img src="https://img.shields.io/badge/Microsoft%20%E5%AE%98%E6%96%B9-1?&colorA=512bd4&colorB=512bd4&logo=microsoft&style=flat-square" alt="img"><img src="https://img.shields.io/badge/Framework%204.8%20%E8%84%B1%E6%9C%BA%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%8C%85-1?&colorA=512bd4&colorB=512bd4&logo=dotnet&style=flat-square" alt="img"></a></p><h2 id="实测截图"><a href="#实测截图" class="headerlink" title="实测截图"></a>实测截图</h2><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/107264/20/34541/138535/63f0630eFddd77b45/60e8d8108608e488.png"></p><h2 id="启动报错-Bug-处理"><a href="#启动报错-Bug-处理" class="headerlink" title="启动报错 Bug 处理"></a>启动报错 Bug 处理</h2><p>如果启动软件后出现<code>Exception from HRESULT: 0x8007007E</code></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/173262/27/33947/118473/63f06326F797e6040/bfb7ce6473683369.png"></p><p>请使用 DirectX Repair 修复工具修复相关 <code>.dll</code> 和运行库</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/144369/14/29002/89002/63f0630cF292e9fb1/eb33f16b2c20ad1b.png"></p><p>修复完成后即可正常使用。</p>]]></content>
    
    
    <summary type="html">OCR文字识别</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="OCR" scheme="https://couurh.github.io/tags/OCR/"/>
    
  </entry>
  
  <entry>
    <title>微信查单删，真实好友3.0</title>
    <link href="https://couurh.github.io/posts/92caec4e.html"/>
    <id>https://couurh.github.io/posts/92caec4e.html</id>
    <published>2022-03-05T02:15:00.000Z</published>
    <updated>2023-02-18T11:04:50.730Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imcockpit.lanzoul.com/iZ8hG0160s2d"><strong>真实好友3.0</strong></a> 利用安卓的无障碍技术自动化检测与每一个微信好友之间的关系(正常、拉黑或删除)。</p><p>在检测的过程中有可能会遇到错误，但只要能完整检测完一位好友，就说明这些错误都是可以被解决的。此时可以试试强制关闭微信，会有奇效。</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-用户须知"><a href="#1-用户须知" class="headerlink" title="1.用户须知"></a>1.用户须知</h4><p>开始之前请务必了解清楚原理。<br>通过手势或HOME键返回桌面可随时终止脚本。<br>如果你是第一次使用，建议先把微信从后台划掉。<br>仅支持简体中文。</p><h4 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h4><p>已适配的微信版本。国内商店: 微信7.0.20-微信8.0.20。谷歌商店: 微信8.0.2-微信8.0.15。<br>本应用没有任何联网代码，不会也无法泄露你的任何隐私。</p><h4 id="3-检测结果的准确性"><a href="#3-检测结果的准确性" class="headerlink" title="3.检测结果的准确性"></a>3.检测结果的准确性</h4><p>Q:有少数一两个显示为被删除的好友，仍然可以正常地发消息。</p><p>A:那是因为对方在微信设置里面关闭了「加我为朋友时需要验证」的功能。</p><h4 id="4-检测速度"><a href="#4-检测速度" class="headerlink" title="4.检测速度"></a>4.检测速度</h4><p>和网络、手机性能、微信版本都有关系，一定要选择网络好的环境进行检测。</p><p>从微信版本8.0.14起，微信做了相关防护，检测速度会慢不少。在意速度的建议使用微信7,0.20版本。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/103593/22/31427/79495/63f063dbFd7e44da6/6dab92cfa028cf3b.jpg"></p>]]></content>
    
    
    <summary type="html">真实好友(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="app" scheme="https://couurh.github.io/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>李跳跳去开屏广告</title>
    <link href="https://couurh.github.io/posts/715de813.html"/>
    <id>https://couurh.github.io/posts/715de813.html</id>
    <published>2022-02-12T02:20:00.000Z</published>
    <updated>2023-02-18T07:56:10.136Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imcockpit.lanzoul.com/b085d82re"><strong>李跳跳</strong></a> （访问码：5493）是一个用来跳广告的工具。</p><p>【稳定】运行极其稳定，无需反复开启无障碍权限。<br>【安全】无需联网，从源头上杜绝了隐私外泄的可能。<br>【极简】极简设计，傻瓜式操作。无需复杂的各种设置，只需开启无障碍权限，即可自动跳过广告。<br>【良心】好用又不收费，相信李跳跳会成为你手机的下一个必备软件。</p><p>软件安装打开后直接点击“启动服务”，然后会自动跳转至系统权限页面，找到“李跳跳”开启相关权限就能生效了。</p><h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/110830/29/34323/23345/63f05fa6F7a2a470b/c0f7b967a544ce11.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/84422/29/24517/84537/63f05f84Fe6f52961/b694d63bc7c7cb34.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/75349/15/24038/52167/63f05fe6F060ca382/f45cf133039ae15c.jpg"></p>]]></content>
    
    
    <summary type="html">去广告(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="app" scheme="https://couurh.github.io/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>Backup_script 数据备份脚本</title>
    <link href="https://couurh.github.io/posts/75156500.html"/>
    <id>https://couurh.github.io/posts/75156500.html</id>
    <published>2022-01-15T03:21:00.000Z</published>
    <updated>2023-02-18T07:50:23.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>数据备份脚本</strong>由原作者创作至今广受好评，备份/恢复数据高效且齐全。因原作者是台湾人<code>(高雄佬)</code>，所以使用的是繁体字制作，而<strong>大陆大部分人习惯简体，又或者一些人看不懂繁体，故而产生了这个项目</strong>。</p><blockquote><p>原版作者: <a href="http://www.coolapk.com/u/2277637">酷安@落叶凄凉TEL</a></p></blockquote><blockquote><p>原版数据备份脚本: <a href="https://github.com/YAWAsau/backup_script">YAWAsau/backup_script</a></p></blockquote><p><em>该项目目的只将繁体转为简体，其他内容均与原版同步。</em></p><h3 id="CI自动构建"><a href="#CI自动构建" class="headerlink" title="CI自动构建"></a>CI自动构建</h3><ul><li><code>脚本开源 安全可靠</code></li><li><code>每隔15分钟自动获取原仓库url链接</code></li><li><code>原仓库对照本仓库url链接版本 发现新版即触发构建发包</code></li></ul><p><strong>它的优点</strong></p><ul><li>数据完整：在更换系统之后，原有的数据全部保留，无需重新登陆或者下载额外数据包。</li><li>速度快：目前支持的压缩算法有 <strong><code>tar(默认)</code></strong> <strong><code>lz4</code></strong> <strong><code>zstd</code></strong></li><li>易操作：简单4步即可备份App完整数据！</li></ul><p><strong>数据备份脚本使用方法：</strong></p><p>1.下载并安装 <a href="https://www.coolapk.com/apk/bin.mt.plus">MT管理器</a> ，授予ROOT权限</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/16788/34/16386/30938/63f05ff6F5ae814a7/a1c14827441b872c.jpg"></p><p>2：下载备份脚本文件</p><p>打开 Github 的项目地址：</p><p><a href="https://github.com/Petit-Abba/backup_script_zh-CN">https://github.com/Petit-Abba/backup_script_zh-CN</a></p><p>（简体中文版脚本）</p><p>如图所示，点击【Releases】，进入文件下载页面</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/121944/26/29719/65827/63f05d9fF8b1a20cb/e9d86af856149ad8.png"></p><p>3：开始备份数据</p><p>（1）在 MT文件管理器中找到上述解压缩之后的文件。（也可以直接使用MT文件管理器解压缩）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/137976/28/34067/131103/63f05c8eF419e01ae/1aec79cbcd1f7ffa.jpg"></p><p>（３）点击**<code>生成应用列表.sh</code>**，并勾选root执行脚本，等待提示结束。 </p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/98370/22/31559/18308/63f05c9eFae267e31/83278c0ba068204b.png"></p><p>（4）以上步骤完成之后，接下来点击**<code>备份应用.sh</code>**并勾选root执行，等待数据备份结束。 </p><p>（5）备份完成后，会在当前目录生成一个<strong>Backup_zstd</strong>文件夹，里面是你的软件备份。</p><p>准备刷机之前，把这个资料夹移动到你的U盘或者电脑，刷完机之后再移动到手机内部存储目录，获取到root权限后，在文件夹里面找到并点击**<code>还原备份.sh</code>**</p>]]></content>
    
    
    <summary type="html">数据备份脚本(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="备份" scheme="https://couurh.github.io/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>易统计自动打卡</title>
    <link href="https://couurh.github.io/posts/c3d289b5.html"/>
    <id>https://couurh.github.io/posts/c3d289b5.html</id>
    <published>2021-12-25T01:35:00.000Z</published>
    <updated>2023-02-18T07:52:03.204Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="1-下载到本地"><a href="#1-下载到本地" class="headerlink" title="1. 下载到本地"></a>1. 下载到本地</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/FanqXu/ncovAutoReport</span><br></code></pre></td></tr></table></figure><h4 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2. 安装依赖"></a>2. 安装依赖</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># pip3 install requests</span><br></code></pre></td></tr></table></figure><h4 id="3-配置文件-conf-ini"><a href="#3-配置文件-conf-ini" class="headerlink" title="3. 配置文件 conf.ini"></a>3. 配置文件 <em>conf.ini</em></h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm"># cd ncovAutoReport &amp;&amp; cat conf.ini<br><span class="hljs-number">92</span>a<span class="hljs-number">3</span><span class="hljs-keyword">c</span><span class="hljs-number">5441023</span>a<span class="hljs-number">43</span>bvf<span class="hljs-number">5084</span>f<span class="hljs-number">5</span>:Fanq:SCU<span class="hljs-number">74835</span>Fe<span class="hljs-number">67</span>ee<span class="hljs-number">5e78</span><span class="hljs-keyword">c</span><span class="hljs-number">32</span>d<span class="hljs-number">9e56</span>e<span class="hljs-number">7</span>dc<span class="hljs-number">68</span>ebad<span class="hljs-number">908</span>vc<span class="hljs-number">5e9</span>e<span class="hljs-number">8</span>cb<span class="hljs-number">7</span>a<span class="hljs-number">97</span><span class="hljs-keyword">cc</span><br></code></pre></td></tr></table></figure><p>以<code>:</code>分为三段，第一段为<code>92a3c5441023a43bvf5084f5</code>是个人「易统计」账号的token，有了这个token才可以打卡；第二段<code>Fanq</code>是名字，随便取；第三段<code>SCU74835Fe67ee5e78c32d9e56e7dc68ebad908vc5e9e8cb7a97cc</code>为个人Server酱的Key，是用于推送至WeChat的。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/144235/18/31801/655144/63f06416F2b2742bc/0228886c72b0995b.png"></p><p>其中token和名字必须要有，而用于推送至WeChat的Server酱的key可有可无。</p><p>如下格式（表明Hz同学没有Server酱的key）也都行：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">$ cat conf.ini<br><span class="hljs-number">92</span>a<span class="hljs-number">3</span><span class="hljs-keyword">c</span><span class="hljs-number">54410</span>g<span class="hljs-number">3</span>a<span class="hljs-number">43</span>bvf<span class="hljs-number">5584</span>f<span class="hljs-number">5</span>:Fanq:SCU<span class="hljs-number">74835</span>Fe<span class="hljs-number">67</span>ee<span class="hljs-number">5e78</span><span class="hljs-keyword">c</span><span class="hljs-number">32</span>d<span class="hljs-number">9e56</span>e<span class="hljs-number">7</span>dc<span class="hljs-number">68</span>ebad<span class="hljs-number">908</span>vc<span class="hljs-number">5e9</span>e<span class="hljs-number">8</span>cb<span class="hljs-number">7</span>a<span class="hljs-number">97</span><span class="hljs-keyword">cc</span><br>a<span class="hljs-number">2</span>a<span class="hljs-number">3</span><span class="hljs-keyword">c</span><span class="hljs-number">52410</span>s<span class="hljs-number">3</span>a<span class="hljs-number">43</span>bvf<span class="hljs-number">5084</span>f<span class="hljs-number">5</span>:Hz:<br></code></pre></td></tr></table></figure><h4 id="4-Server酱配置（可选）"><a href="#4-Server酱配置（可选）" class="headerlink" title="4. Server酱配置（可选）"></a>4. Server酱配置（可选）</h4><ul><li><a href="https://sc.ftqq.com/3.version">https://sc.ftqq.com/3.version</a></li></ul><p>使用GitHub的账号登录Server酱的网站就能获取一个key；然后绑定WeChat，也就是扫码关注他们的公众号就行了。具体操作去上方那个他们的网站去看。</p><p>实现功能的代码如下，其中<code>text</code>和<code>desp</code>中的内容可以自行修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">sendMsg</span>(<span class="hljs-params">self, status</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        通过Server酱推送至WeChat</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> status == <span class="hljs-string">&#x27;success&#x27;</span>:<br>            status = <span class="hljs-string">&quot;今日打卡成功&quot;</span><br>        payload = &#123;<br>            <span class="hljs-string">&#x27;text&#x27;</span>: status,<br>            <span class="hljs-string">&#x27;desp&#x27;</span>: <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">##### 提示：</span><br><span class="hljs-string">    大约每2/3天需要登录一次打卡平台！</span><br><span class="hljs-string">    （打开「易统计」微信小程序即可）</span><br><span class="hljs-string">                    &quot;&quot;&quot;</span>&#125;<br>        reqUrl = <span class="hljs-string">&#x27;https://sc.ftqq.com/&#x27;</span> + self.keys + <span class="hljs-string">&quot;.send&quot;</span><br>        push = requests.post(reqUrl, data=payload)<br></code></pre></td></tr></table></figure><h4 id="5-手动运行"><a href="#5-手动运行" class="headerlink" title="5. 手动运行"></a>5. 手动运行</h4><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"># python3 re<span class="hljs-keyword">port</span>.py<br></code></pre></td></tr></table></figure><h4 id="6-自动化"><a href="#6-自动化" class="headerlink" title="6. 自动化"></a>6. 自动化</h4><p>使用Linux定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># crontab -e</span><br>00 9 * * * python3 /root/ncovAutoReport/report.py<br></code></pre></td></tr></table></figure><p>查看定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># crontab -l</span><br><span class="hljs-comment"># m h  dom mon dow   command</span><br>00 8 * * * python3 /root/ncovAutoReport/report.py<br></code></pre></td></tr></table></figure><p>每天早上八点自动执行<code>python3 /root/ncovAutoReport/report.py</code>这条命令。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="1-打卡成功"><a href="#1-打卡成功" class="headerlink" title="1. 打卡成功"></a>1. 打卡成功</h4><p>两种状态均表明打卡成功。第一种「您今天已经创建过日报，无法再次创建」表明这是一种重复打卡，没事的。第二种「今日打卡成功」属于预期的结果。</p><h4 id="2-打卡失败"><a href="#2-打卡失败" class="headerlink" title="2. 打卡失败"></a>2. 打卡失败</h4><p>原因可能是超过十天未登录「易统计」小程序，token临时失效。请登录小程序，顺便手动打一下卡。</p><h4 id="3-已知问题"><a href="#3-已知问题" class="headerlink" title="3. 已知问题"></a>3. 已知问题</h4><p>大约十天不登录一次，token就会临时失效，请求<code>https://www.ioteams.com/ncov/api/users/last-report</code>这个接口就会报403。</p><p>所以目前是要求大约每十天需要登录一次！（打开「易统计」微信小程序即可）</p><p>另外这个程序是以请求上次打卡（昨天）提交的信息，来作为这一次（今天）所需要提交的信息。也就是说当离开一个地方去另一个地方，需要暂停使用这个程序一天。那一天自己手动打卡以后再使用这个程序。</p><p>另外身体异常者不要使用。</p>]]></content>
    
    
    <summary type="html">易统计自动打卡&amp;微信推送</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="打卡" scheme="https://couurh.github.io/tags/%E6%89%93%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>本地部署青龙面板</title>
    <link href="https://couurh.github.io/posts/4979d1d8.html"/>
    <id>https://couurh.github.io/posts/4979d1d8.html</id>
    <published>2021-11-20T01:40:00.000Z</published>
    <updated>2023-02-18T08:05:02.751Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提条件："><a href="#前提条件：" class="headerlink" title="前提条件："></a>前提条件：</h3><ol><li>已ROOT的安卓机，可以正常安装magisk模块</li><li>抓cookie</li></ol><h3 id="开始部署："><a href="#开始部署：" class="headerlink" title="开始部署："></a>开始部署：</h3><ol><li><p>下载青龙magisk模块并安装：</p><p><a href="https://imcockpit.lanzoul.com/iwdpZ012zqza">查看链接</a> （访问码：ef1c）</p></li><li><p>安装busybox模块，直接在magisk仓库搜索busybox for android ndk关键字安装即可或者在搞机助手magisk仓库安装（耐心等待安装完成）</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/55609/35/19119/49904/63f06061F5f02642a/5cc8c0c4ca63976a.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/91920/18/32542/172254/63f06066F0f828347/6c274c83f7f447ce.jpg"></p></li><li><p>全部安装完，手机重启以后浏览器内直接访问127.0.0.1:5700即可看到青龙的页面。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/181089/27/32675/53760/63f060c4Fe9b8db42/6c7116fbefa3b1c5.jpg"></p></li><li><p>第一次进入配置好账号密码以后进入青龙页面首先需要拉仓库，具体操作如下：</p></li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/99446/39/37210/79604/63f06110Ffb8f32f7/26cf64d98c3399c8.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/35260/1/20385/65194/63f060f0F2f44a80c/c2ef754b8b9513b1.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/96372/15/34743/82945/63f06065F5f838948/d4ed37edd39637a3.jpg"></p><h3 id="获取京东cookie-PC端"><a href="#获取京东cookie-PC端" class="headerlink" title="获取京东cookie(PC端)"></a>获取京东cookie(PC端)</h3><p>使用chrome内核浏览器，打开开发者模式（F12），打开network标签，浏览器访问京东移动端登录地址m.jd.com，按照提示登录你的京东账号。复制下图所示内容。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/191445/37/32903/68035/63f060b5F62ee9516/67796fd22e7c4015.png"></p><p>注：这样复制出来的<code>cookie</code>比较长，只需要<code>pt_pin=xxxx;</code>和 <code>pt_key=xxxx;</code>部分的内容即可移动端同。</p><p>然后打开青龙面板，选择环境变量-&gt;添加变量，名称为<code>JD_COOKIE</code>,值为刚复制的<code>COOKIE</code>，备注自己填，别的不需要动。添加后点确定就可以，如果需要添加多个账号，只需要获取多个<code>COOKIE</code>添加上去就可以了，名称仍然为<code>JD_COOKIE</code>。添加好京东账号之后就可以去执行脚本了。</p><h3 id="获取京东cookie-移动端"><a href="#获取京东cookie-移动端" class="headerlink" title="获取京东cookie(移动端)"></a>获取京东cookie(移动端)</h3><p>使用<a href="https://imcockpit.lanzoul.com/iY9qR0172ceh">Alook浏览器</a>，登陆京东后长按主页选择开发者工具，点击<code>Cookies</code>拷贝。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/114807/8/31540/28150/63f06134F8fbfa399/fb635aa43fb02607.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/78567/25/25890/43777/63f06135Fb2d709d6/dbf547bb102b0e50.jpg"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/34412/33/20775/28971/63f06133Fabaf1ace/6190c9428fa919d7.jpg"></p><h3 id="Faker集合仓库"><a href="#Faker集合仓库" class="headerlink" title="Faker集合仓库"></a>Faker集合仓库</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ql repo https:<span class="hljs-regexp">//g</span>hproxy.com<span class="hljs-regexp">/https:/</span><span class="hljs-regexp">/github.com/</span>shufflewzc/faker2.git <span class="hljs-string">&quot;jd_|jx_|getJDCookie&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|ZooFaker_Necklace&quot;</span><br>ql repo https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/okyyds/yy</span>dspure.git <span class="hljs-string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="hljs-string">&quot;activity|backUp&quot;</span> <span class="hljs-string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="hljs-string">&quot;master&quot;</span><br></code></pre></td></tr></table></figure><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>Q:青龙有时候更新就进不了面板</p><p>A:再执行一遍更新命令</p><p>Q:如何获取助力码？</p><p>A:先登录需要助力的账号，手动将配置文件内出现名字的脚本运行一遍，然后运行互助码脚本。</p><p>Q：更新/jd/scripts失败，请检查原因…</p><p>A: 网络卡，等会再试试，或者加国内代理头</p><p>Q：argument list too long</p><p>A:   ck太多，建议保持在45左右。</p>]]></content>
    
    
    <summary type="html">青龙面板(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="青龙面板" scheme="https://couurh.github.io/tags/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>Auto.js实现滑动验证码</title>
    <link href="https://couurh.github.io/posts/c598a983.html"/>
    <id>https://couurh.github.io/posts/c598a983.html</id>
    <published>2020-08-08T02:00:00.000Z</published>
    <updated>2023-02-18T06:58:13.356Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Auto-js实现滑动验证码"><a href="#Auto-js实现滑动验证码" class="headerlink" title="Auto.js实现滑动验证码"></a><strong>Auto.js实现滑动验证码</strong></h3><hr><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> y = <span class="hljs-number">1839</span>;<span class="hljs-comment">//设置滑动按钮高度</span><br><span class="hljs-keyword">var</span> start_x = <span class="hljs-number">170</span>;<br><span class="hljs-comment">//y=className(&quot;android.widget.Image&quot;).text(&quot;tag-bar&quot;).findOne().bounds().centerY()</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">   </span><br><span class="hljs-comment">*</span><br><span class="hljs-comment"> *适用版本：所有安卓版本</span><br><span class="hljs-comment"> *适用分辨率：1080p720p1440P 及其他所有分辨率！</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment">   </span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *防检测功能：模拟真人滑动</span><br><span class="hljs-comment"> *通过四阶贝塞尔曲线，生成完全模仿真的滑动方式</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><br>   <br><span class="hljs-comment">//请求权限</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">requestScreenCapture</span>()) &#123;<br>    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;请求截图权限失败！&quot;</span>);<br>    <span class="hljs-title function_">exit</span>();<br>&#125;<br><span class="hljs-comment">//启动</span><br><span class="hljs-title function_">start</span>()<br>   <br><span class="hljs-comment">/** </span><br><span class="hljs-comment"> * 识别滑块位置</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * 传入值img，ratio</span><br><span class="hljs-comment"> * img为要识别的图片</span><br><span class="hljs-comment"> * ratio为识别图片的分辨率（暂时只可选择720P1080P1440P）</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * 返回值x</span><br><span class="hljs-comment"> * 识别出方块位置的左端横坐标</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">discernSlidingblock</span>(<span class="hljs-params">img, ratio</span>) &#123;<br>    <span class="hljs-comment">//创建识别变量</span><br>    <span class="hljs-keyword">var</span> temp, temp2, x, y, num, color, p, temp3, arr1;<br>    <span class="hljs-comment">//分析设备分辨率</span><br>    <span class="hljs-keyword">if</span> (ratio == <span class="hljs-number">720</span>) &#123;<br>        <span class="hljs-keyword">var</span> tb = [<span class="hljs-number">348</span>, <span class="hljs-number">253</span>, <span class="hljs-number">691</span>, <span class="hljs-number">638</span>, <span class="hljs-number">81</span>]<br>        <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;您的设备分辨率为：720p&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ratio == <span class="hljs-number">1080</span>) &#123;<br>        <span class="hljs-keyword">var</span> tb = [<span class="hljs-number">463</span>, <span class="hljs-number">387</span>, <span class="hljs-number">912</span>, <span class="hljs-number">831</span>, <span class="hljs-number">125</span>]<br>        <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;您的设备分辨率为：1080p&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ratio == <span class="hljs-number">1440</span>) &#123;<br>        <span class="hljs-comment">// var tb = [106, 820, 1316, 1434, 125]</span><br>        <span class="hljs-keyword">var</span> tb = [<span class="hljs-number">106</span>, <span class="hljs-number">1189</span>, <span class="hljs-number">1151</span>, <span class="hljs-number">1710</span>, <span class="hljs-number">118</span>]<br>        <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;您的设备分辨率为：1440p&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;当前设备分辨率不符合规范&quot;</span>);<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">2</span><br>    &#125;<br>    num = <span class="hljs-number">118</span> * <span class="hljs-number">4</span> - <span class="hljs-number">4</span>;<br>       <br>    <span class="hljs-comment">//计算滑块位置</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">80</span>; k &lt;= <span class="hljs-number">80</span>; k++) &#123;<br>        temp2 = <span class="hljs-string">&quot;&quot;</span>;<br>        color = <span class="hljs-string">&quot;#&quot;</span> + k + <span class="hljs-string">&quot;&quot;</span> + k + <span class="hljs-string">&quot;&quot;</span> + k + <span class="hljs-string">&quot;&quot;</span>;<br>        rows = tb[<span class="hljs-number">4</span>];<br>        arr2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; rows; j++)<br>        &#123;<br>            arr2[<span class="hljs-number">0</span> * rows + j] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>            arr2[<span class="hljs-number">0</span> * rows + j] = [j + <span class="hljs-number">1</span>, <span class="hljs-number">0</span> , color];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; rows; j++)<br>        &#123;<br>            arr2[<span class="hljs-number">1</span> * rows + j] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>            arr2[<span class="hljs-number">1</span> * rows + j] = [rows, j + <span class="hljs-number">1</span>, color];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; rows; j++)<br>        &#123;<br>            arr2[<span class="hljs-number">2</span> * rows + j] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>            arr2[<span class="hljs-number">2</span> * rows + j] = [j, rows, color];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; rows; j++)<br>        &#123;<br>            arr2[<span class="hljs-number">3</span> * rows + j] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>();<br>            arr2[<span class="hljs-number">3</span> * rows + j] = [<span class="hljs-number">0</span>, j, color];<br>        &#125;<br>        <span class="hljs-comment">// log(arr2);</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            p = images.<span class="hljs-title function_">findMultiColors</span>(img, color, arr2, &#123;<br>                <span class="hljs-attr">region</span>: [tb[<span class="hljs-number">0</span>], tb[<span class="hljs-number">1</span>], tb[<span class="hljs-number">2</span>] - tb[<span class="hljs-number">0</span>], tb[<span class="hljs-number">3</span>] - tb[<span class="hljs-number">1</span>]],<br>                <span class="hljs-attr">threshold</span>: <span class="hljs-number">5</span><br>            &#125;);<br>            <span class="hljs-comment">// log(arr2.length);</span><br>            <span class="hljs-keyword">if</span> (p) &#123;<br>                img.<span class="hljs-title function_">recycle</span>();<br>                <span class="hljs-title function_">log</span>(p);<br>                <span class="hljs-keyword">return</span> p.<span class="hljs-property">x</span> + <span class="hljs-built_in">parseInt</span>(tb[<span class="hljs-number">4</span>] / <span class="hljs-number">2</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>            <span class="hljs-comment">//出错</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;识别失败，错误原因：&quot;</span> + error);<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>        img.<span class="hljs-title function_">recycle</span>();<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;识别失败，错误原因：&quot;</span> + error);<br>    &#125;<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>&#125;<br>   <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>    auto.<span class="hljs-title function_">waitFor</span>()<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">0</span>;i++)&#123;<span class="hljs-title function_">sleep</span>(<span class="hljs-number">1000</span>);<span class="hljs-title function_">log</span>(i);&#125;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>        img = images.<span class="hljs-title function_">captureScreen</span>();<br>        <span class="hljs-keyword">if</span> (img) &#123;<br>            <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;截图成功。进行识别滑块！&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;截图失败,重新截图&#x27;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// var x = discernSlidingblock(imgURL(),1440);</span><br>    <span class="hljs-keyword">var</span> x = <span class="hljs-title function_">discernSlidingblock</span>(<span class="hljs-title function_">imgBy1440</span>(),<span class="hljs-number">1440</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;识别结果滑块X坐标：&quot;</span> + x);<br>   <br>    <span class="hljs-keyword">if</span> (x &gt; -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-title function_">randomSwipe</span>(start_x, y, x, y)<br>        <span class="hljs-comment">//滑动完成</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;识别有误，请确认是否在滑块界面&quot;</span>);<br>    &#125;<br>&#125;<br>   <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">bezierCreate</span>(<span class="hljs-params">x1,y1,x2,y2,x3,y3,x4,y4</span>)&#123;<br>    <span class="hljs-comment">//构建参数</span><br>    <span class="hljs-keyword">var</span> h=<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">var</span> cp=[&#123;<span class="hljs-attr">x</span>:x1,<span class="hljs-attr">y</span>:y1+h&#125;,&#123;<span class="hljs-attr">x</span>:x2,<span class="hljs-attr">y</span>:y2+h&#125;,&#123;<span class="hljs-attr">x</span>:x3,<span class="hljs-attr">y</span>:y3+h&#125;,&#123;<span class="hljs-attr">x</span>:x4,<span class="hljs-attr">y</span>:y4+h&#125;];<br>    <span class="hljs-keyword">var</span> numberOfPoints = <span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">var</span> curve = [];<br>    <span class="hljs-keyword">var</span> dt = <span class="hljs-number">1.0</span> / (numberOfPoints - <span class="hljs-number">1</span>);<br>       <br>    <span class="hljs-comment">//计算轨迹</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; numberOfPoints; i++)&#123;<br>        <span class="hljs-keyword">var</span> ax, bx, cx;<br>        <span class="hljs-keyword">var</span> ay, by, cy;<br>        <span class="hljs-keyword">var</span> tSquared, tCubed;<br>        <span class="hljs-keyword">var</span> result_x, result_y;<br>       <br>        cx = <span class="hljs-number">3.0</span> * (cp[<span class="hljs-number">1</span>].<span class="hljs-property">x</span> - cp[<span class="hljs-number">0</span>].<span class="hljs-property">x</span>);<br>        bx = <span class="hljs-number">3.0</span> * (cp[<span class="hljs-number">2</span>].<span class="hljs-property">x</span> - cp[<span class="hljs-number">1</span>].<span class="hljs-property">x</span>) - cx;<br>        ax = cp[<span class="hljs-number">3</span>].<span class="hljs-property">x</span> - cp[<span class="hljs-number">0</span>].<span class="hljs-property">x</span> - cx - bx;<br>        cy = <span class="hljs-number">3.0</span> * (cp[<span class="hljs-number">1</span>].<span class="hljs-property">y</span> - cp[<span class="hljs-number">0</span>].<span class="hljs-property">y</span>);<br>        by = <span class="hljs-number">3.0</span> * (cp[<span class="hljs-number">2</span>].<span class="hljs-property">y</span> - cp[<span class="hljs-number">1</span>].<span class="hljs-property">y</span>) - cy;<br>        ay = cp[<span class="hljs-number">3</span>].<span class="hljs-property">y</span> - cp[<span class="hljs-number">0</span>].<span class="hljs-property">y</span> - cy - by;<br>       <br>        <span class="hljs-keyword">var</span> t=dt*i<br>        tSquared = t * t;<br>        tCubed = tSquared * t;<br>        result_x = (ax * tCubed) + (bx * tSquared) + (cx * t) + cp[<span class="hljs-number">0</span>].<span class="hljs-property">x</span>;<br>        result_y = (ay * tCubed) + (by * tSquared) + (cy * t) + cp[<span class="hljs-number">0</span>].<span class="hljs-property">y</span>;<br>        curve[i] = &#123;<br>            <span class="hljs-attr">x</span>: result_x,<br>            <span class="hljs-attr">y</span>: result_y<br>        &#125;;<br>    &#125;<br>   <br>    <span class="hljs-comment">//轨迹转路数组</span><br>    <span class="hljs-keyword">var</span> array=[];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;i&lt;curve.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">var</span> j = (i &lt; <span class="hljs-number">100</span>) ? i : (<span class="hljs-number">199</span> - i);<br>            xx = <span class="hljs-built_in">parseInt</span>(curve[j].<span class="hljs-property">x</span>)<br>            yy = <span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(<span class="hljs-number">100</span> - curve[j].<span class="hljs-property">y</span>))<br>        &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>            <span class="hljs-keyword">break</span><br>        &#125;<br>        array.<span class="hljs-title function_">push</span>([xx, yy])<br>    &#125;<br>       <br>    <span class="hljs-keyword">return</span> array<br>&#125;<br>   <br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 真人模拟滑动函数</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * 传入值：起点终点坐标</span><br><span class="hljs-comment"> * 效果：模拟真人滑动</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomSwipe</span>(<span class="hljs-params">sx,sy,ex,ey</span>)&#123;<br>    <span class="hljs-comment">//设置随机滑动时长范围</span><br>    <span class="hljs-keyword">var</span> timeMin=<span class="hljs-number">500</span><br>    <span class="hljs-keyword">var</span> timeMax=<span class="hljs-number">1500</span><br>    <span class="hljs-comment">//设置控制点极限距离</span><br>    <span class="hljs-keyword">var</span> leaveHeightLength=<span class="hljs-number">50</span><br>    <span class="hljs-title function_">log</span>([sx, sy, ex, ey]);<br>    <span class="hljs-comment">//根据偏差距离，应用不同的随机方式</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(ex-sx)&gt;<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(ey-sy))&#123;<br>        <span class="hljs-keyword">var</span> my=(sy+ey)/<span class="hljs-number">2</span><br>        <span class="hljs-keyword">var</span> y2=my+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,leaveHeightLength)<br>        <span class="hljs-keyword">var</span> y3=my-<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,leaveHeightLength)<br>       <br>        <span class="hljs-keyword">var</span> lx=(sx-ex)/<span class="hljs-number">3</span><br>        <span class="hljs-keyword">if</span>(lx&lt;<span class="hljs-number">0</span>)&#123;lx=-lx&#125;<br>        <span class="hljs-keyword">var</span> x2=sx+lx/<span class="hljs-number">2</span>+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,lx)<br>        <span class="hljs-keyword">var</span> x3=sx+lx+lx/<span class="hljs-number">2</span>+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,lx)<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">var</span> mx=(sx+ex)/<span class="hljs-number">2</span><br>        <span class="hljs-keyword">var</span> y2=mx+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,leaveHeightLength)<br>        <span class="hljs-keyword">var</span> y3=mx-<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,leaveHeightLength)<br>   <br>        <span class="hljs-keyword">var</span> ly=(sy-ey)/<span class="hljs-number">3</span><br>        <span class="hljs-keyword">if</span>(ly&lt;<span class="hljs-number">0</span>)&#123;ly=-ly&#125;<br>        <span class="hljs-keyword">var</span> y2=sy+ly/<span class="hljs-number">2</span>+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,ly)<br>        <span class="hljs-keyword">var</span> y3=sy+ly+ly/<span class="hljs-number">2</span>+<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,ly)<br>    &#125;<br>   <br>    <span class="hljs-comment">//获取运行轨迹，及参数</span><br>    <span class="hljs-keyword">var</span> time=[<span class="hljs-number">0</span>,<span class="hljs-title function_">random</span>(timeMin,timeMax)]<br>    <span class="hljs-keyword">var</span> track=<span class="hljs-title function_">bezierCreate</span>(sx,sy,x2,y2,x3,y3,ex,ey)<br>       <br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;随机控制点A坐标：&quot;</span>+x2+<span class="hljs-string">&quot;,&quot;</span>+y2)<br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;随机控制点B坐标：&quot;</span>+x3+<span class="hljs-string">&quot;,&quot;</span>+y3)<br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;随机滑动时长：&quot;</span>+time[<span class="hljs-number">1</span>])<br>       <br>    <span class="hljs-comment">//滑动</span><br>    <span class="hljs-title function_">gestures</span>(time.<span class="hljs-title function_">concat</span>(track))<br>    <span class="hljs-comment">// console.hide()</span><br>&#125;<br>   <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">imgBy1080</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> img=<span class="hljs-title function_">captureScreen</span>()<br>    <span class="hljs-keyword">return</span> images.<span class="hljs-title function_">resize</span>(img,[<span class="hljs-number">1080</span>,device.<span class="hljs-property">height</span>*<span class="hljs-number">1080</span>/device.<span class="hljs-property">width</span>])<br>&#125;<br>  <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">imgBy1440</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> img=<span class="hljs-title function_">captureScreen</span>();<br>    <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (img)<br>        &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            img=<span class="hljs-title function_">captureScreen</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> img;<br>    <span class="hljs-comment">// return images.resize(img,[1440,device.height*1440/device.width])</span><br>&#125;<br> <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">imgURL</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> img = images.<span class="hljs-title function_">load</span>(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/couurh/tc/XZSDK.jpg&quot;</span>);<br>    <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (img)<br>        &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            img=images.<span class="hljs-title function_">load</span>(<span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/couurh/tc/XZSDK.jpg&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;tupianxiazaichenggong&quot;</span>);<br>    <span class="hljs-keyword">return</span> img;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Auto.js滑块验证(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Auto.js" scheme="https://couurh.github.io/tags/Auto-js/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客双线部署</title>
    <link href="https://couurh.github.io/posts/5deeb6a1.html"/>
    <id>https://couurh.github.io/posts/5deeb6a1.html</id>
    <published>2020-08-01T02:00:00.000Z</published>
    <updated>2023-02-18T07:46:21.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近折腾了HEXO 的博客，以前我使用的是Typecho，Typecho是基于PHP的动态博客程序，而HeXo则截然相反。它是纯静态的，可以托管于gh pages。</p><p>相比于Typecho，Hexo在配置博客时虽然更加麻烦，但在后期维护的成本大大降低不再需要云服务器或者虚拟主机之类的服务，因而成本降低了不仅仅是服务器成本，在维护成本上也大大降低。使用动态博客程序要兼顾到很多东西，比如服务器宕机了，需要有人维护而静态博客就不需要了，扔到gh pages后基本就不用太过于操心，其实说了这么多主要原因是我的服务器快到期了。。。</p><p>下面就开始吧~</p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Hexo 的运行需要 Node.js 的支持，所以需要首先安装好 Node.js 。打开<a href="https://nodejs.org/en/">Node.js官网</a>就能很明显地看到下载提示，点击左边的按钮进行下载即可。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/153824/14/30251/50701/63f06a48F83eb116c/8185c830d869526c.png"></p><p><strong>下载完点击安装程序进行安装，无需修改安装路径的话无脑点击下一步即可。</strong><br>当安装完成后打开命令行工具（cmd/powershell)，输入<code>node -v</code>，如果输出如下信息，安装即为成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ node -v<br>v12.18.1<br></code></pre></td></tr></table></figure><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>需要从 GitHub 上下载主题文件，最重要的是需要将本地的博客部署到可供外部访问的网页上去，借助的是 GitHub ，这些都离不开 Git 的支持。同样的到 <a href="https://git-scm.com/downloads">Git官网下载页</a>下载即可。这里选择 Windows 64 位最新版本的 Git for Windows 进行安装。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/162867/13/34014/88135/63f06a4aF7247d424/0762b1b091989178.png"></p><p><strong>安装和 Node.js 差不多，不做修改的话一直点下一步即可。</strong><br>安装完成后同样打开命令行工具（cmd/powershell)，输入<code>git --version</code>，如果输出如下信息，安装即为成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git --version<br>git version 2.26.2.windows.1<br></code></pre></td></tr></table></figure><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>Hexo 就是个人博客网站的框架，需要在电脑里创建一个文件夹（称之为博客根目录），用来存放 Hexo 的相关文件以及博客文章，文件夹名字随意（建议不要出现中文），我文件夹名字为 <code>Hexo-Blog</code>。创建好后，<strong>进入文件夹中</strong>，右键进入 <code>Git Bash Here</code>，由于国内的 npm 访问外网下载速度较慢，可以将 npm 源更换为淘宝的镜像（当然如果你觉得你的下载速度较快的话，也可以选择不进行更换），在 Git Bash 中输入以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p><strong>请注意如果进行了上述操作，那么之后的下载等操作需要使用到 npm 的地方你都应该更换为 cnpm 指令，这样才能起到加速作用，如果未进行更换，则使用 npm 即可。</strong></p><p>输入如下指令即可安装完成 Hexo 的安装</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>安装完成后，输入 <code>hexo -v</code> 命令，如果显示如下信息，则安装成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo-cli: 1.1.0<br>os: Windows_NT 10.0.17134 win32 x64<br>http_parser: 2.8.0<br>node: 10.14.1<br>v8: 6.8.275.32-node.36<br>uv: 1.23.2<br>...<br></code></pre></td></tr></table></figure><h2 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>文件夹中大致如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hexo-Bolg<br>|---- node_modules<br>|---- public<br>|---- scaffolds<br>|---- <span class="hljs-built_in">source</span><br>|---- _post<br>|---- themes<br>|---- _config.yaml<br></code></pre></td></tr></table></figure><ol><li><code>node_modules</code> 是 <code>node.js</code> 各种库的目录，</li><li><code>public</code> 是生成的网页文件目录（一开始可能没有）</li><li><code>scaffolds</code> 里面就三个文件，存储着新文章和新页面的初始设置</li><li><code>source</code> 是最常用到的一个目录，里面存放着文章、各类页面、图像等文件</li><li><code>themes</code> 存放着主题文件</li><li><code>_config.yaml</code> 站点配置文件</li></ol><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>在 Git Bash 中输入 <code>hexo g</code> 命令（是 <code>hexo generate</code> 的简写），等待 Hexo 自动生成网页，得到如下反馈则生成成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br>INFO  Start processing<br>INFO  Files loaded <span class="hljs-keyword">in</span> 192 ms<br>INFO  Generated: index.html<br>...<br>INFO  28 files generated <span class="hljs-keyword">in</span> 459 ms<br></code></pre></td></tr></table></figure><p>接下来需要开启开启本地服务器，输入 <code>hexo s</code> 命令（是 <code>hexo server</code> 的简写），输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.<br></code></pre></td></tr></table></figure><p>Hexo 正在 <a href="http://localhost:4000/">http://localhost:4000</a> 运行，按 Ctrl+C 可停止</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/196177/23/32635/1410650/63f06a53F88d2944d/825520c53fc9c1ef.png"></p><h2 id="在Github创建仓库"><a href="#在Github创建仓库" class="headerlink" title="在Github创建仓库"></a>在Github创建仓库</h2><p>首先如果你还没有 Github 账号的先<a href="https://github.com/">注册</a>一个，点击 GitHub 中的右上角的 + 创建新仓库（new repository），仓库名应该为：<a href="http://yourname.github.io/">yourname.github.io</a> 这里的 yourname 使用你的 GitHub 帐号名称代替，这是固定写法。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/151089/16/31189/70708/63f06ae3Fc97e87ea/7d1c72dffd0b2ea3.png"></p><h2 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h2><p>在桌面右键点击 <code>Git Bash Here</code>设置user.name和user.email配置信息，<br>在弹出界面中输入以下内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后创建 <code>SSH</code></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后直接三个回车即可，即不设置密码</p><p>然后在 <code>C:\Users\Username\.ssh</code> 路径下找到名为 <code>id_rsa.pub</code> 的文件，就是你刚刚创建的密钥，右键用记事本打开然后复制全部内容</p><p>然后进入 GitHub 添加密钥</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/63271/18/23967/77125/63f06abbF759eaf26/23e26134104c5313.png"></p><p>将复制的内容粘贴至 Key 中，title 随便填然后点击 <code>Add SSH key</code></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/160597/27/34993/43459/63f06a96Fb19a0777/26a27aba2955bbdf.png"></p><p>在 Git Bash 中检测 GitHub 公钥设置是否成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>当出现 <code>Hi,yourname! You&#39;ve successfully......</code> 则已经成功</p><h2 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h2><p>需要将 hexo 和 GitHub 关联起来，部署之前还需要修改配置和安装部署插件。</p><p>第一：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/deployment.html</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol"> type:</span> git<br><span class="hljs-symbol"> repo:</span> <br><span class="hljs-symbol">   github:</span> git@github.com:yourname/yourname.github.io.git<br><span class="hljs-symbol"> branch:</span> master<br></code></pre></td></tr></table></figure><p>第二：要安装一个部署插件 <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>最后执行以下命令就可以部署上传啦</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo s<br></code></pre></td></tr></table></figure><p>稍等一会，在浏览器访问网址： <a href="https://你的用户名.github.io/">https://你的用户名.github.io</a> 就会看到你的博客啦！！</p><h2 id="完善配置文件-config-yaml"><a href="#完善配置文件-config-yaml" class="headerlink" title="完善配置文件 _config.yaml"></a>完善配置文件 <code>_config.yaml</code></h2><p>只提供主要配置的中文<br>按 <code>Ctrl+F</code> 可进行搜索</p><p>(#后为注释)</p><p>首先修改网站基本信息</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment"># Site</span><br><span class="hljs-attribute">title</span>:          <span class="hljs-comment"># 网站标题</span><br><span class="hljs-attribute">subtitle</span>: &#x27;&#x27;<br><span class="hljs-attribute">description</span>:    <span class="hljs-comment"># 网站描述</span><br><span class="hljs-attribute">keywords</span>:       <span class="hljs-comment"># 网站关键词</span><br><span class="hljs-attribute">author</span>:         <span class="hljs-comment"># 博客作者名字</span><br><span class="hljs-attribute">language</span>: zh-CN <span class="hljs-comment"># 语言</span><br><span class="hljs-attribute">timezone</span>: &#x27;&#x27;<br></code></pre></td></tr></table></figure><p>将链接改为你博客域名（<a href="http://yourname.github.io/">yourname.github.io</a>）</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">url:</span> http:<span class="hljs-comment">//yoursite.com</span><br></code></pre></td></tr></table></figure><p>你博客文章的地址，默认为 <a href="http://yourname.github.io/year/mouth/day/title">yourname.github.io/year/mouth/day/title</a><br>，可自行修改<br>例如你的一篇文章叫 post，如果按照默认设置则文章地址是 xxxxxxx/2020/02/10/post<br>如果是我图片上的设置则地址是 xxxxxxx/2020/post</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">permalink:</span> <span class="hljs-symbol">:year/</span><span class="hljs-symbol">:month/</span><span class="hljs-symbol">:day/</span><span class="hljs-symbol">:title/</span><br></code></pre></td></tr></table></figure><p>每页的文章数量</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">per_page</span>: <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><p>选择你的主题，默认即为<code>landscape</code>，你可以到<a href="https://hexo.io/themes/">官网主题页</a>或者网上找你喜欢的，可以根据主题<a href="http://theme-next.iissnan.com/getting-started.html">官网使用文档</a>说明修改相应的配置，达到自己想要的效果。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> landscape<br></code></pre></td></tr></table></figure><h2 id="文章编写"><a href="#文章编写" class="headerlink" title="文章编写"></a>文章编写</h2><p>博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 <a href="https://hexo.io/zh-cn/">hexo</a> 官网。<br>新建文章，输入以下命令即可</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&#x27;文章标题&#x27;</span><br></code></pre></td></tr></table></figure><p>执行完成后可以在 /source/_posts 下看到一个名为 <code>hello-world.md</code> 的文件 <code>.md</code> 即为markdown文章的后缀名</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">Welcome</span> <span class="hljs-string">to</span> [<span class="hljs-string">Hexo</span>]<span class="hljs-string">(https://hexo.io/)!</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">your</span> <span class="hljs-string">very</span> <span class="hljs-string">first</span> <span class="hljs-string">post.</span> <span class="hljs-string">Check</span> [<span class="hljs-string">documentation</span>]<span class="hljs-string">(https://hexo.io/docs/)</span> <span class="hljs-string">for</span> <span class="hljs-string">more</span> <span class="hljs-string">info.</span> <span class="hljs-string">If</span> <span class="hljs-string">you</span> <span class="hljs-string">get</span> <span class="hljs-string">any</span> <span class="hljs-string">problems</span> <span class="hljs-string">when</span> <span class="hljs-string">using</span> <span class="hljs-string">Hexo,</span> <span class="hljs-string">you</span> <span class="hljs-string">can</span> <span class="hljs-string">find</span> <span class="hljs-string">the</span> <span class="hljs-string">answer</span> <span class="hljs-string">in</span> [<span class="hljs-string">troubleshooting</span>]<span class="hljs-string">(https://hexo.io/docs/troubleshooting.html)</span> <span class="hljs-string">or</span> <span class="hljs-string">you</span> <span class="hljs-string">can</span> <span class="hljs-string">ask</span> <span class="hljs-string">me</span> <span class="hljs-string">on</span> [<span class="hljs-string">GitHub</span>]<span class="hljs-string">(https://github.com/hexojs/hexo/issues).</span><br><span class="hljs-string">............</span><br><span class="hljs-string">............</span><br></code></pre></td></tr></table></figure><p>两个 <code>---</code> 中间的部分称之为 <code>Front-matter</code> ，即文章的属性，该部分来自 <code>\scaffolds\post.md</code> ,这个md文件中放着一份模板，之后用 <code>hexo n “xxx”</code> 命令新建的文件的 <code>Front-matter</code> 都来自这，可以自己修改该文件。</p><p>title 标题，date 建立日期，updated 更新日期，tags 标签，categories 分类</p><p>除了使用命令新建文章还可以自己在 <code>_post</code> 文件夹中创建 <code>.md</code> 文件，需要注意的是，使用命令创建的文章会自动帮写好 <code>Front-matter</code>，而手动创建的需要自己写。</p><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。</p><h4 id="利用jsDelivr-CDN加速访问"><a href="#利用jsDelivr-CDN加速访问" class="headerlink" title="利用jsDelivr CDN加速访问"></a>利用jsDelivr CDN加速访问</h4><p>jsDelivr 是一个免费开源的 CDN 解决方案，PicGo工具一键上传，操作简单高效，GitHub和jsDelivr都是大厂，不用担心跑路问题，不用担心速度和容量问题，而且完全免费，可以说是目前免费图床的最佳解决方案！</p><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h4><p>图床工具，就是自动把本地图片转换成链接的一款工具，网络上有很多图床工具，就目前使用种类而言，PicGo 算得上一款比较优秀的图床工具。它是一款用 <code>Electron-vue</code> 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用</p><h4 id="新建GitHub仓库"><a href="#新建GitHub仓库" class="headerlink" title="新建GitHub仓库"></a>新建GitHub仓库</h4><p>新建一个仓库按要求填写仓库名，仓库描述，是否初始化README.md描述文件</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/151089/16/31189/70708/63f06ae3Fc97e87ea/7d1c72dffd0b2ea3.png"></p><h4 id="生成一个Token"><a href="#生成一个Token" class="headerlink" title="生成一个Token"></a>生成一个Token</h4><p>在GitHub首页以次打开【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，最后点击【Generate token】生成一个Token</p><p><strong>注意这个token只会显示一次，自己一定要保存下来！！！</strong></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/101513/31/37576/73978/63f06ab6F05c53774/10a88f215db1330a.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/81777/9/19045/52715/63f06a94Fa6b9d52b/42f79b035337590e.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/161790/18/35399/78999/63f06b5fF9b5ffc65/0f9cc821526645f6.png"></p><h4 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h4><p><a href="https://github.com/Molunerfinn/picgo/releases">下载PicGo</a>并安装！</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/38823/20/23937/25725/63f06b5eF2256989c/f43d9c9a0cdd2d81.png"></p><p><strong>设定仓库名：</strong>你的用户名+创建好的仓库名</p><p><strong>设定分支名：</strong>master</p><p><strong>设定Token：</strong>粘贴之前生成的token</p><p><strong>指定储存路径：</strong>填写想要储存的路径，如【tuchuang/】，这样就会在仓库下创建一个名为 tuchuang 的文件夹，图片将会储存在此文件夹中</p><p><strong>设置自定义域名：</strong>它的作用是，在图片上传后，PicGo会按照【<code>自定义域名+储存路径+上传的图片名</code>】的方式生成访问链接，这里是默认的GitHub连接格式<a href="https://raw.githubusercontent.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D/master">https://raw.githubusercontent.com/用户名/仓库名/master</a></p><p><strong>使用 jsDelivr 加速访问</strong>：也不需要注册，直接按这个格式粘贴进PicGo【<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名</code> 】即可实现自动生成加速后的连接</p><h2 id="部署到Coding"><a href="#部署到Coding" class="headerlink" title="部署到Coding"></a>部署到Coding</h2><p>由于github 一直处于半墙状态，访问速度堪忧，所以可以选择境内访问走 coding（国内的平台），境外访问走 github，你需要有自己的域名，挺便宜的，算下来一天好像一分钱不到</p><p>首先注册一个账号，官网 <a href="https://coding.net/">查看链接</a></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/162286/24/34904/401715/63f06ba6F09f09f22/e1f94efb9c33a65b.png"></p><p>注册</p><p>登录后，在右上角创建项目</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/85159/4/22566/266262/63f06b62Fe4a0d191/8e2675d3bcaf8a64.png"></p><p>创建项目</p><p>选择代码托管项目</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/186034/31/33007/229209/63f06b63Ffcfe2495/b7db452a77732e96.png"></p><p>然后按照下图填写，项目名称建议像 github 一样强制和用户名一样然后再加 <code>coding.me</code>，项目标识会自动弹出来</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/35979/20/20038/54399/63f06c5dFb163d5aa/1699707bda1b875d.png"></p><p>创建完成之后发现并没有静态网页，需要在左下角的设置中开启</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/135254/36/27805/90136/63f06c58Fda445fb1/210f26bb6ee798fb.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/180641/39/31804/94793/63f06c57Fd192ceee/f370775b96bd99e6.png"></p><p>然后返回点击静态网站有个构建与部署，点击立即发布，按下面设置后保存。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/143633/16/24660/261618/63f06c5cFa58d813e/bc7ff6153d14d21a.png"></p><p>然后在 <code>C:\Users\Username\.ssh</code> 路径下找到名为 <code>id_rsa.pub</code> 的文件，就是你刚刚创建的密钥，右键用记事本打开然后复制全部内容，在个人设置里找到 SSH公钥，点击新增公钥勾选永久有效。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/129887/36/34786/53691/63f06c58F26ee3e72/9dcfb6caf3a24832.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/132264/31/30390/60534/63f06ceaFbbab4c5b/7c2e5dfc5d924644.png"></p><p>添加完成后可在 git bash 中输入如下代码，检查是否添加成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@e</span>.coding.net<br></code></pre></td></tr></table></figure><p>如果添加成功会显示如下信息</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">$ ssh -T git@<span class="hljs-keyword">e</span>.coding.<span class="hljs-keyword">net</span><br>Coding 提示: Hello Couurh, You&#x27;ve connected to Coding.<span class="hljs-keyword">net</span> via SSH. This is a <span class="hljs-keyword">personal</span> key.<br>Couurh，你好，你已经通过 SSH 协议认证 Coding.<span class="hljs-keyword">net</span> 服务，这是一个个人公钥.<br>公钥指纹：11:11:11:11:11:11:11:11:11:11:11:11:11:11:11:11(例)<br><br></code></pre></td></tr></table></figure><h2 id="修改解析记录"><a href="#修改解析记录" class="headerlink" title="修改解析记录"></a>修改解析记录</h2><p>首先进入你买域名的平台，我用的是阿里云</p><p>进入控制台–&gt;域名管理–&gt;解析设置</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/97127/17/35201/308635/63f06c87F3fb69e10/aa75c9b53797bd6b.png"></p><p><strong>注意！先进行 coding 解析并申请证书开启强制 HTTPS，证书成功申请之后再进行 github 解析！</strong></p><h2 id="coding-解析"><a href="#coding-解析" class="headerlink" title="coding 解析"></a>coding 解析</h2><p>添加 coding 的解析，主机记录选 www，记录类型选 CNAME，记录值为coding分配的静态网站页面地址，不能加 <code>https://</code> 或者 <code>http://</code>，后面默认就可以了；</p><p>再添加一条主机记录选 @ ，记录类型选择 A，记录值值填域名的 ipv4 地址(Ping记录值)</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/642/12/20913/77971/63f06c7cF15ec31a2/e3afc11d2f24d027.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/48543/17/22821/16620/63f06c74F19ac3291/2e9a6dd92d50fa78.png"></p><p>点击右上角设置将自己的域名填进去，可以开启强制 HTTPS，然后绑定</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/186862/17/32311/78800/63f06ce2Fbe0a70ab/29a11ed5f5b59099.png"></p><h2 id="GitHub解析"><a href="#GitHub解析" class="headerlink" title="GitHub解析"></a>GitHub解析</h2><p>添加 github 的解析，主机记录选 www，记录类型选 CNAME，记录值填写 github 给你的博客地址，不能加 <code>https://</code> 或者 <code>http://</code>，线路选境外，也就是说如果境外访问你的博客会走 github；</p><p>再添加一条主机记录选 @ ，记录类型选择 A，记录值值填域名的 ipv4 地址(Ping 记录值)</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/147565/28/33789/16611/63f06cfbF0ce9a500/39702e00c1bc9135.png"></p><p>解析记录填写完了，就需要到 github 上设置下，进入仓库点击 settings，然后向下滑找到 GitHub Pages填入自己的域名，点击 save，可以选择强制 HTTPS</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/73512/28/23253/61138/63f06cfaF33d658d3/d77f3ee925f8e43d.png"></p><p>进入站点根目录修改配置文件_config.yml</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">deploy:<br> type: git<br> repo: <br>   github: git@github<span class="hljs-selector-class">.com</span>:yourname/yourname<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span><br>   coding: git@e<span class="hljs-selector-class">.coding</span><span class="hljs-selector-class">.net</span>:yourname/Blog/yourname<span class="hljs-selector-class">.git</span><br> branch: master<br></code></pre></td></tr></table></figure><p>最后执行部署命令</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">hexo clean <span class="hljs-variable">&amp;&amp;</span> hexo g <span class="hljs-variable">&amp;&amp;</span> hexo d<br></code></pre></td></tr></table></figure><p>如果部署成功，在 coding仓库中就可以看到你提交部署的代码，然后就可以访问你的博客站点了。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>文章到这差不多啦！技术有限，难免有纰漏，欢迎指正批评和讨论，感谢阅读！</p>]]></content>
    
    
    <summary type="html">Hexo静态博客搭建</summary>
    
    
    
    <category term="网站建设" scheme="https://couurh.github.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://couurh.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>基于 Auto.js 的蚂蚁森林能量自动收取脚本</title>
    <link href="https://couurh.github.io/posts/f47ba636.html"/>
    <id>https://couurh.github.io/posts/f47ba636.html</id>
    <published>2020-07-25T02:00:00.000Z</published>
    <updated>2023-02-18T06:54:18.490Z</updated>
    
    <content type="html"><![CDATA[<p>基于 Auto.js 的蚂蚁森林能量自动收取脚本</p><p>Auto.js-based ant forest energy auto-collect script</p><hr><p><strong>项目地址</strong></p><p><a href="https://github.com/SuperMonster003/Ant_Forest" title="基于 Auto.js 的蚂蚁森林能量自动收取脚本">基于 Auto.js 的蚂蚁森林能量自动收取脚本</a></p><hr><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><hr><h4 id="1-检查设备环境"><a href="#1-检查设备环境" class="headerlink" title="1.检查设备环境"></a>1.检查设备环境</h4><h4 id="2-下载项目"><a href="#2-下载项目" class="headerlink" title="2.下载项目"></a>2.下载项目</h4><p>点击可直接下载最新项目包<br>或点击页面右侧绿色 Clone or download 按钮<br>手机浏览器需在项目主页拉到底部点击 Desktop version</p><h4 id="3-存储路径"><a href="#3-存储路径" class="headerlink" title="3.存储路径"></a>3.存储路径</h4><p>将项目中的全部文件放置于手机存储<br>中文系统默认目录 /sdcard/脚本/<br>英文系统默认目录 /sdcard/Scripts/</p><h4 id="4-项目配置"><a href="#4-项目配置" class="headerlink" title="4.项目配置"></a>4.项目配置</h4><p>使用 Auto.js 运行 *.js 格式的脚本文件<br>运行 Ant_Forest_Launcher.js 文件可启动项目<br>运行 Ant_Forest_Settings.js 文件可进行项目配置</p><h4 id="5-应用环境"><a href="#5-应用环境" class="headerlink" title="5.应用环境"></a>5.应用环境</h4><p>安卓系统最低版本: 7.0 / Android Nougat / Android N<br>“Auto.js”推荐版本:<br>– 免费版本 –</p><ul><li><a href="https://imcockpit.lanzoul.com/i5l0h9c">4.1.1 Alpha2</a> (<code>免费版本</code>)</li></ul><hr><h3 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h3><hr><ul><li>自动收取好友能量</li><li>自动收取/监测自己能量</li><li>收取结果统计/展示</li></ul><details open="" style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;">查看更多功能</summary><br style="box-sizing: border-box;"><ul dir="auto" style="box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px;"><li style="box-sizing: border-box;">控制台消息提示<br style="box-sizing: border-box;">· 开发者测试日志 (默认关闭)</li><li style="box-sizing: border-box; margin-top: 0.25em;">自动解锁屏幕<br style="box-sizing: border-box;">· 提供解锁密码录入等配置</li><li style="box-sizing: border-box; margin-top: 0.25em;">定时任务与循环监测<br style="box-sizing: border-box;">· 好友排行榜样本复查<br style="box-sizing: border-box;">· 主页能量球循环监测<br style="box-sizing: border-box;">· 定时任务自动管理</li><li style="box-sizing: border-box; margin-top: 0.25em;">多任务自动排队</li><li style="box-sizing: border-box; margin-top: 0.25em;">脚本运行安全<br style="box-sizing: border-box;">· 运行失败自动重试<br style="box-sizing: border-box;">· 单次运行最大时间限制<br style="box-sizing: border-box;">· 排他性任务最大排队时间限制<br style="box-sizing: border-box;">· 脚本炸弹预防</li><li style="box-sizing: border-box; margin-top: 0.25em;">事件监测与处理<br style="box-sizing: border-box;">· 账户登出<br style="box-sizing: border-box;">· 屏幕意外关闭<br style="box-sizing: border-box;">· 来电响铃或通话</li><li style="box-sizing: border-box; margin-top: 0.25em;">多语言支持 (简体中文/英语)<br style="box-sizing: border-box;">· 自动切换简体中文语言</li><li style="box-sizing: border-box; margin-top: 0.25em;">黑名单机制<br style="box-sizing: border-box;">· 能量保护罩黑名单自动管理<br style="box-sizing: border-box;">· 用户自定义黑名单管理 (列表选择/检索选择)</li><li style="box-sizing: border-box; margin-top: 0.25em;">项目管理<br style="box-sizing: border-box;">· 在线更新项目<br style="box-sizing: border-box;">· 本地备份项目<br style="box-sizing: border-box;">· 本地或服务器还原项目<br style="box-sizing: border-box;">· 项目更新提示/版本忽略</li><li style="box-sizing: border-box; margin-top: 0.25em;">信息加密存储<br style="box-sizing: border-box;">· 自动生成密文字典文件<br style="box-sizing: border-box;">· 使用密文存储账户信息/解锁密码等敏感信息</li><li style="box-sizing: border-box; margin-top: 0.25em;">账户功能<br style="box-sizing: border-box;">· 防止其他账户意外收取 (需录入主账户信息)<br style="box-sizing: border-box;">· 主账户操作完毕可自动回切之前登录的账户</li><li style="box-sizing: border-box; margin-top: 0.25em;">统计功能</li><li style="box-sizing: border-box; margin-top: 0.25em;">适应恶劣条件<br style="box-sizing: border-box;">· 脚本在网络条件较差时仍可正常运行或识别异常</li><li style="box-sizing: border-box; margin-top: 0.25em;">图形化配置工具<br style="box-sizing: border-box;">· 基于UI的配置工具 可详细配置项目参数</li></ul></details>]]></content>
    
    
    <summary type="html">我来偷你能量了！</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Auto.js" scheme="https://couurh.github.io/tags/Auto-js/"/>
    
  </entry>
  
  <entry>
    <title>Tasker实现收到短信自动转发到微信</title>
    <link href="https://couurh.github.io/posts/7f0d2c71.html"/>
    <id>https://couurh.github.io/posts/7f0d2c71.html</id>
    <published>2020-07-18T02:00:00.000Z</published>
    <updated>2023-02-18T07:02:42.485Z</updated>
    
    <content type="html"><![CDATA[<p><strong>短信自动转发到微信</strong></p><hr><p>短信转发到微信上是使用的<a href="https://work.weixin.qq.com/" title="企业微信">企业微信</a>的一项功能：企业微信收到的信息可以同步到微信上,而企业微信有着丰富的可开发性。</p><hr><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><hr><ul><li><h4 id="注册企业微信"><a href="#注册企业微信" class="headerlink" title="注册企业微信"></a>注册企业微信</h4></li></ul><ol><li><p><a href="https://work.weixin.qq.com/wework_admin/loginpage_wx#profile" title="注册">注册</a></p></li><li><p>注册完成后<a href="https://work.weixin.qq.com/wework_admin/loginpage_wx#profile" title="打开">打开</a>复制下网页底部的企业信息中的企业ID备用。</p></li><li><p><a href="https://work.weixin.qq.com/wework_admin/loginpage_wx#profile/wxPlugin" title="点击">点击</a>看到一个二维码,使用微信扫码关注,这样就可以使企业微信中收到的信息同步到微信上。</p></li></ol><ul><li><h4 id="创建一个应用"><a href="#创建一个应用" class="headerlink" title="创建一个应用"></a>创建一个应用</h4></li></ul><ol><li><a href="https://work.weixin.qq.com/wework_admin/loginpage_wx#apps/createApiApp" title="点击">点击</a>这里创建上传一个应用logo和自定义应用名字，其他默认。</li><li>创建后<a href="https://work.weixin.qq.com/wework_admin/loginpage_wx#apps" title="打开">打开</a>可以看到在 “应用”中的”自建”里有个应用。点进去打开记录下 AgentId和Secret备用。</li></ol><ul><li><h4 id="创建Tasker配置文件"><a href="#创建Tasker配置文件" class="headerlink" title="创建Tasker配置文件"></a>创建Tasker配置文件</h4></li></ul><p>下面是创建部分图示的说明</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/2983/1/20806/276582/63f0695bF93807eca/f3833e27bbbf0e69.png"></p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/207358/10/25463/341068/63f0695dFfab96e62/732dc8f4ed3f8ef2.png"></p><p>点击加号–新建配置打勾–选择触发类型–事件–选择触发条件类型–电话–选择触发内容–收到短信–点击返回–新建任务–自定义任务名称打勾–点击加号–新建操作–选择代码–选择JavaScriptlet–在此位置填写代码(随便填个先)–点击箭头–返回–返回–打勾</p><ul><li>代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python">//将下面的三个变量值修改为自己的<br>var ID = <span class="hljs-string">&quot;wwc367de248887ebad&quot;</span>;<br>var SECRET = <span class="hljs-string">&quot;KNgBbhHiTo66VSVzqLv0vYCadXE0ndrn5o41xxxB2o4&quot;</span>;<br>var AGENTID = <span class="hljs-string">&quot;1000002&quot;</span>;<br><br>//定义post方法<br>function posthttp(url, data) &#123;<br>    var xhr = new XMLHttpRequest();<br>    xhr.addEventListener(<span class="hljs-string">&quot;readystatechange&quot;</span>, function () &#123;<br>        <span class="hljs-keyword">if</span> (this.readyState === <span class="hljs-number">4</span>) &#123;<br>            flash(this.responseText); //显示返回消息,可删除本行<br>        &#125;<br>    &#125;);<br>    xhr.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;POST&quot;</span>, url, false);<br>    xhr.send(data);<br>    <span class="hljs-keyword">return</span> xhr.responseText;<br>&#125;<br><br>//定义get方法<br>function gethttp(url) &#123;<br>    var xhr = new XMLHttpRequest();<br>    xhr.addEventListener(<span class="hljs-string">&quot;readystatechange&quot;</span>, function () &#123;<br>        <span class="hljs-keyword">if</span> (this.readyState === <span class="hljs-number">4</span>) &#123;<br>            flash(this.responseText); //显示返回消息,可删除本行<br>        &#125;<br>    &#125;);<br>    xhr.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;GET&quot;</span>, url, false);<br>    xhr.send();<br>    <span class="hljs-keyword">return</span> xhr.responseText;<br>&#125;<br><br>//获取token<br>var gettoken = <span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&quot;</span> + ID + <span class="hljs-string">&quot;&amp;corpsecret=&quot;</span> + SECRET;<br>var ACCESS_TOKEN = JSON.parse(gethttp(gettoken)).access_token;<br><br>//发送消息(文本)<br>var SMSRF = <span class="hljs-keyword">global</span>(<span class="hljs-string">&#x27;SMSRF&#x27;</span>);<br>var SMSRB = <span class="hljs-keyword">global</span>(<span class="hljs-string">&#x27;SMSRB&#x27;</span>);<br>var SMSRT = <span class="hljs-keyword">global</span>(<span class="hljs-string">&#x27;SMSRT&#x27;</span>);<br>var SMSRD = <span class="hljs-keyword">global</span>(<span class="hljs-string">&#x27;SMSRD&#x27;</span>);<br>var CONTENT = <span class="hljs-string">&quot;发件人: &quot;</span> + SMSRF + <span class="hljs-string">&quot;\n时间: &quot;</span> + SMSRT + <span class="hljs-string">&quot;,  日期: &quot;</span> + SMSRD + <span class="hljs-string">&quot;\n短信内容: &quot;</span> + SMSRB;<br>var message = JSON.stringify(&#123;<br>    <span class="hljs-string">&quot;touser&quot;</span>: <span class="hljs-string">&quot;@all&quot;</span>,<br>    <span class="hljs-string">&quot;msgtype&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>    <span class="hljs-string">&quot;agentid&quot;</span>: AGENTID,<br>    <span class="hljs-string">&quot;text&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;content&quot;</span>: CONTENT<br>    &#125;,<br>    <span class="hljs-string">&quot;safe&quot;</span>: <span class="hljs-number">0</span><br>&#125;);<br>var send = <span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&quot;</span> + ACCESS_TOKEN;<br>posthttp(send, message);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">短信自动转发到微信(Android)</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Tasker" scheme="https://couurh.github.io/tags/Tasker/"/>
    
  </entry>
  
  <entry>
    <title>搭建Frp内网穿透，实现公网windows远程桌面连接</title>
    <link href="https://couurh.github.io/posts/5d6d9dc8.html"/>
    <id>https://couurh.github.io/posts/5d6d9dc8.html</id>
    <published>2020-07-11T02:00:00.000Z</published>
    <updated>2023-02-18T07:59:17.445Z</updated>
    
    <content type="html"><![CDATA[<p>搭建Frp内网穿透，实现公网windows远程桌面连接</p><p>使用Frp内网穿透工具使处于内网中的电脑能够像访问公网电脑一样方便，比如将公司或个人电脑里面的web项目让别人能够访问以便于自己及时修改，或者是进行远程或ssh连接。能够实现内网穿透的还有花生壳，ngrok等，但frp使用起来更加简便灵活，以及项目一直开源，所以本文选择frp作为示例。<br>Frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p><hr><p>[项目地址][1]</p><p><strong>数据准备：</strong></p><p>•    公网IP: X.X.X.X<br>•    内网IP: 192.168.1.101<br>•    映射到公网的域名：xxx.com<br>本文中内网电脑使用的是win10系统，公网电脑为win系统。</p><h3 id="一-服务端配置"><a href="#一-服务端配置" class="headerlink" title="一. 服务端配置"></a>一. 服务端配置</h3><hr><p>此脚本是Frp一键部署Linux服务端，像酸酸乳、v2ray 等一键.sh脚本，安装、更新、重启、开机启动等服务。<br>[脚本代码地址][2]<br>服务端安装支持：Centos | Debian | Ubuntu （32bit / 64bit）</p><hr><p><strong>Install（安装）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1.</span>wget https://raw.githubusercontent.com/MvsCode/frp-onekey/master/install-frps.sh -O ./install-frps.sh<br><span class="hljs-number">2.</span>chmod <span class="hljs-number">700</span> ./install-frps.sh<br><span class="hljs-number">3.</span>./install-frps.sh install<br></code></pre></td></tr></table></figure><p><strong>Uninstall（卸载）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1.</span>./install-frps.sh uninstall<br></code></pre></td></tr></table></figure><p><strong>Update（更新）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1.</span>./install-frps.sh update<br></code></pre></td></tr></table></figure><p><strong>服务端相关命令</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">frps start    <span class="hljs-comment">#启动frps服务端</span><br>frps stop     <span class="hljs-comment">#停止frps服务端</span><br>frps restart  <span class="hljs-comment">#重启frps服务端</span><br>frps status   <span class="hljs-comment">#显示frps状态</span><br>frps config   <span class="hljs-comment">#配置frps服务端</span><br>frps version  <span class="hljs-comment">#显示frps版本</span><br></code></pre></td></tr></table></figure><p>脚本将会自动识别机器的IP地址，所有选项支持自定义，也均可默认配置，也就是直接按回车，程序就会使用默认配置进行安装</p><hr><p><strong>步骤说明：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>Please select frps download url:<br>[<span class="hljs-number">1</span>].aliyun<br>[<span class="hljs-number">2</span>].github (default)<br><span class="hljs-comment">#输入下载frp服务端配置文件的服务器，默认GitHub</span><br>Please <span class="hljs-built_in">input</span> frps bind_port[<span class="hljs-number">1</span>-<span class="hljs-number">65535</span>](Default Server Port: <span class="hljs-number">5443</span>):<br><span class="hljs-comment">#输入frp提供服务的端口，用于服务器端和客户端通信，默认5443</span><br>Please <span class="hljs-built_in">input</span> frps vhost_http_port[<span class="hljs-number">1</span>-<span class="hljs-number">65535</span>](Default : <span class="hljs-number">80</span>):<br><span class="hljs-comment">#输入frp进行http穿透的http服务端口，默认80</span><br>Please <span class="hljs-built_in">input</span> frps vhost_https_port[<span class="hljs-number">1</span>-<span class="hljs-number">65535</span>](Default : <span class="hljs-number">443</span>):<br><span class="hljs-comment">#输入frp进行https穿透的https服务端口，默认443</span><br>Please <span class="hljs-built_in">input</span> frps dashboard_port [<span class="hljs-number">1</span>-<span class="hljs-number">65535</span>]<br>(Default : <span class="hljs-number">6443</span>):<br><span class="hljs-comment">#输入frp的控制台服务端口，用于查看frp工作状态，默认6443</span><br>Please <span class="hljs-built_in">input</span> frps dashboard_user(Default :admin):<br><span class="hljs-comment">#输入frp的控制台服务账号，默认admin</span><br>Please <span class="hljs-built_in">input</span> frps dashboard_pwd(Default :ZBdmQ53):<br><span class="hljs-comment">#输入frp的控制台服务密码，默认是随机生成的</span><br>Please <span class="hljs-built_in">input</span> frps token(Default :eOajAGbI5ZrSmU3a):<br><span class="hljs-comment">#输入frp服务器和客户端通信的密码，默认是随机生成的</span><br>Please <span class="hljs-built_in">input</span> frps subdomain_host(Default :<span class="hljs-number">35.189</span><span class="hljs-number">.139</span><span class="hljs-number">.184</span>):<br><span class="hljs-comment">#输入frp服务器自定义域名，支持自定义二次域名，默认是服务器IP地址</span><br>Please <span class="hljs-built_in">input</span> frps max_pool_count [<span class="hljs-number">1</span>-<span class="hljs-number">200</span>]<br>(Default : <span class="hljs-number">50</span>):<br><span class="hljs-comment">#设置每个代理可以创建的连接池上限，默认50</span><br>Please select log_level<br><span class="hljs-number">1</span>: info (default)<br><span class="hljs-number">2</span>: warn<br><span class="hljs-number">3</span>: error<br><span class="hljs-number">4</span>: debug<br><span class="hljs-comment">#设置日志等级，4个选项，默认是info</span><br>Please <span class="hljs-built_in">input</span> frps log_max_days [<span class="hljs-number">1</span>-<span class="hljs-number">30</span>]<br>(Default : <span class="hljs-number">3</span> day):<br><span class="hljs-comment">#设置日志保留天数，范围是1到30天，默认保留3天。</span><br>Please select log_file<br><span class="hljs-number">1</span>: enable (default)<br><span class="hljs-number">2</span>: disable<br><span class="hljs-comment">#设置是否开启日志记录，默认开启，开启后日志等级及保留天数生效，否则等级和保留天数无效</span><br>Please select tcp_mux<br><span class="hljs-number">1</span>: enable (default)<br><span class="hljs-number">2</span>: disable<br><span class="hljs-comment">#客户端和服务器端之间的连接支持多路复用，默认开启</span><br>Please select kcp support<br><span class="hljs-number">1</span>: enable (default)<br><span class="hljs-number">2</span>: disable<br><span class="hljs-comment">#选择是否开启kcp 协议，默认开启，弱网环境下传输效率提升明显，但会有额外的流量消耗</span><br></code></pre></td></tr></table></figure><p>启动成功后，本地访问 <a href="http://ip或者自定义域名:6433/">http://ip或者自定义域名:6433</a>  即可看到WEB控制台。到此安装服务端成功！<br><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/124231/21/33892/11131/63f069c5F82bb71cd/fe6aa4e0e43d1c2b.png"></p><h3 id="二-客户端配置"><a href="#二-客户端配置" class="headerlink" title="二. 客户端配置"></a>二. 客户端配置</h3><hr><p>具有内网IP的电脑将作为客户端(frpc)， 本文中客户端使用的是win10 64位系统，所以在releases页面下载frp_0.25.0_windows_amd64.zip解压，只需保留frpc frpc.ini两个文件，其他可以删除</p><hr><p><strong>通过 ssh 访问公司内网机器（例）</strong><br>修改 frps.ini 文件，这里使用了最简化的配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">[common]<br>bind_port = <span class="hljs-number">7000</span> <span class="hljs-comment">#与客户端绑定的进行通信的端口</span><br>token = <span class="hljs-number">1234</span> <span class="hljs-comment">#身份验证</span><br></code></pre></td></tr></table></figure><p>修改完成后在此此文件目录下启动服务 执行此命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">•前台启动<br>./frps -c ./frps.ini<br>•后台启动<br>nohup ./frps -c ./frps.ini &amp;<br></code></pre></td></tr></table></figure><p>修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">[common]<br>server_addr = x.x.x.x <span class="hljs-comment">#公网服务器ip</span><br>server_port = <span class="hljs-number">7000</span> <span class="hljs-comment">#与服务端bind_port一致</span><br>token = <span class="hljs-number">1234</span> <span class="hljs-comment">#身份验证</span><br><br>[ssh]<br><span class="hljs-built_in">type</span> = tcp <span class="hljs-comment">#连接协议</span><br>local_ip = <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> <span class="hljs-comment">#内网服务器IP</span><br>local_port = <span class="hljs-number">3389</span> <span class="hljs-comment">#ssh远程端口号</span><br>remote_port = <span class="hljs-number">6000</span> <span class="hljs-comment">#自定义访问内部ssh端口号</span><br></code></pre></td></tr></table></figure><p>修改完成后在此此文件目录下启动服务 执行此命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">•前台启动<br>./frpc -c ./frpc.ini<br>•后台启动<br>nohup ./frpc -c ./frpc.ini &amp;<br></code></pre></td></tr></table></figure><hr><h3 id="三-设置开机启动和后台运行"><a href="#三-设置开机启动和后台运行" class="headerlink" title="三. 设置开机启动和后台运行"></a>三. 设置开机启动和后台运行</h3><hr><p>同样的道理，也需要对客户端设置后台运行和开机自启。借助[winsw][4]工具可以将frpc注册为windows系统中的服务。<br>下载winsw最新版，为了方便将其重命名为winsw.exe, 将该文件和frpc.exe放在一起，然后新建winsw.xml写入以下内容：</p><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;service&gt;<br>    &lt;<span class="hljs-built_in">id</span>&gt;frp&lt;/<span class="hljs-built_in">id</span>&gt;<br>    &lt;name&gt;frp这里是服务的名称&lt;/name&gt;<br>    &lt;description&gt;这里是服务的介绍，随便写&lt;/description&gt;<br>    &lt;executable&gt;frpc&lt;/executable&gt;<br>    &lt;arguments&gt;-c frpc.ini&lt;/arguments&gt;<br>    &lt;onfailure action=<span class="hljs-string">&quot;restart&quot;</span> delay=<span class="hljs-string">&quot;60 sec&quot;</span>/&gt;<br>    &lt;onfailure action=<span class="hljs-string">&quot;restart&quot;</span> delay=<span class="hljs-string">&quot;120 sec&quot;</span>/&gt;<br>    &lt;logmode&gt;reset&lt;/logmode&gt;<br>&lt;/service&gt;<br></code></pre></td></tr></table></figure><p>然后使用winsw install和winsw start命令即可将frpc安装为系统服务。<br>win+r后通过services.msc进入到服务列表页面找到frp服务。为了确保frpc在连接失败后自动尝试重新连接，在恢复tap页进行如下设置：<br><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/181205/27/32548/23487/63f069baF0b441de0/e579b7e20c6746db.png"></p><p>使用微软远程工具，填入公网IP，ssh端口号以及主机名，设置如下：<br><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/125555/17/30264/21819/63f06a2aF368a41a3/645553205f7a6c65.png"></p><p>使用问题</p><p>1.检查是否关闭服务端防火墙或者是开启要用到的端口<br>2.域名映射是否正确，检查能不能ping得通域名(域名前面不要忘了www)</p>]]></content>
    
    
    <summary type="html">搭建Frp内网穿透，实现公网windows远程桌面连接</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="内网穿透" scheme="https://couurh.github.io/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>OnePlus 7 Pro 刷机教程 - 第二章</title>
    <link href="https://couurh.github.io/posts/65d19576.html"/>
    <id>https://couurh.github.io/posts/65d19576.html</id>
    <published>2020-06-14T05:06:00.000Z</published>
    <updated>2023-02-18T11:07:26.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需要的文件"><a href="#需要的文件" class="headerlink" title="需要的文件"></a>需要的文件</h2><p>✨OnePlus 7 Pro 机型适用的 TWRP 映像：<br>Android P：<a href="https://www.lanzoux.com/i7c93ta">查看链接</a><br>Android 10：<a href="https://www.lanzoux.com/i7c9bwb">查看链接</a></p><p>✨以上资源来自 XDA 论坛用户 mauronofrio，原帖： <a href="https://forum.xda-developers.com/oneplus-7-pro/development/recovery-unofficial-twrp-recovery-t3931322">查看链接</a></p><p>✨Magisk v20.1 卡刷包： <a href="https://www.lanzoux.com/i7c9mqb">查看链接</a></p><p>可以前往官方 GitHub 页面下载：<a href="https://github.com/topjohnwu/Magisk/releases">查看链接</a></p><h2 id="解锁-BootLoader-以下简称-BL"><a href="#解锁-BootLoader-以下简称-BL" class="headerlink" title="解锁 BootLoader (以下简称 BL)"></a>解锁 BootLoader (以下简称 BL)</h2><p>绝大多数手机在刷机之前所需要进行的操作就是解锁 BL。</p><p>⚠️注意！OnePlus 7 Pro 在解锁后 Widevine DRM 等级将会降至 L3！</p><p>📝Bootloader 是什么？</p><p>Bootloader (简称 BL) 指的是 Android Bootloader，这说明还有其他的 BL 存在。</p><p>BL 主要负责在设备上启动内核，开机的时候就会启动 boot 分区中存在的内核，进而启动 Android 系统。</p><p>为了避免因为非官方固件使设备受到损害，通常设备厂商会对 BL 进行上锁 (Lock)，防止第三方固件刷写到设备分区中。而为了解开这一限制，则需要对其进行解锁 (Unlock)。</p><p>手机刷机本质上就是对设备系统分区的刷写操作（如 system, vendor 分区）。解锁后便可使用 fastboot 工具对分区刷写，或者启动自定义内核（比如 TWRP）</p><p>⚠️解锁 Bootloader 会清除手机所有数据！请务必在解锁前将数据妥善备份！</p><p>本文大部分操作因需要使用到 adb 与 fastboot 命令。</p><p>⚠️在此假设你已经查阅了本系列教程的上一章或者你已经熟悉了上述工具的使用。</p><p>🌟操作步骤：</p><ol><li><p>进入系统设置 -&gt; 系统 -&gt; 开发者选项，打开「USB 调试」「OEM 解锁」选项</p></li><li><p>执行 adb reboot bootloader ，手机将会重启至 Fastboot 模式</p></li><li><p>在 Fastboot 模式下，执行 fastboot flashing unlock 命令，手机将会对你解锁 Bootloader 的操作进行确认！使用音量键选中第二个选项。再按下电源键将会清除设备数据并解锁！</p></li><li><p>解锁完成后，设备会自动重启，你可以重新返回至「开发者选项」查看 BL 解锁状态。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/55638/37/22078/219287/63f06167F85f09635/efcc208dbbdcb091.jpg"></p></li></ol><p>在解锁 BL 后，你或许会注意到：以后每次设备开机都会在一个充满文字的画面停留一段时间，才会继续开机。这是由于 BL 解锁后处于安全考虑的警告，解锁就意味着你的固件安全性不能得到保证！</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/156040/1/34946/37600/63f06183Fb3b73eb1/024f4ae3ae31425b.jpg"></p><p>至此，解锁 BL 的步骤就完成了！现在可以通过 Fastboot 模式对设备分区任意刷写了！</p><h2 id="TWRP-的使用"><a href="#TWRP-的使用" class="headerlink" title="TWRP 的使用"></a>TWRP 的使用</h2><p>要想刷入自定义固件的卡刷包，还需要使用第三方 Recovery TWRP 来完成。</p><p>📝TWRP 是什么？</p><p>TWRP 全程 Team Win Recovery Project，中文名是「胜利队恢复计划」。</p><p>它是一种恢复模式固件 (Recovery)，允许用户刷入自定义的设备固件、分区操作等等功能。你可以在这里看到更多信息： <a href="https://twrp.me/faq/whatistwrp.html">查看链接</a></p><p>📝什么是 Recovery？</p><p>首先讲讲 Recovery 模式，这个模式是用于在 Android 设备安装 OTA 更新包，执行恢复出厂设置的模式。一般厂商官方的 Recovery 只可用于安装官方的 OTA 升级包，无法刷入自定义固件，所以需要第三方的 Recovery。</p><p>📝升级包和卡刷包又有个什么关系？</p><p>升级包和卡刷包其实就是一个东西，如果你使用压缩软件打开一个非 A/B 分区设备的 OTA 升级包，和一个常见的卡刷包，你会发现里面都有路径为 /META-INF/com/google/android/update-binary 的文件，这个就是 Recovery 判断是不是合法卡刷包的一个依据。随后就会解析卡刷包内的脚本执行一系列操作对分区进行修改等目的…</p><h2 id="启动-TWRP"><a href="#启动-TWRP" class="headerlink" title="启动 TWRP"></a>启动 TWRP</h2><ol><li>你可以看到下载下来的压缩包里面有一个后缀名为 IMG 的文件，将它解压至某处。</li><li>将手机再次重启至 Fastboot 模式，并连接至电脑。</li><li>进入 Fastboot 模式后，执行 fastboot boot D:\twrp.img，请将 D:\twrp.img 自行替换成解压出来的 IMG 文件路径，你可以使用拖拽的方式直接将文件拖到命令行窗口，它会自动将路径填写在上面。</li><li>不出意外的话，手机屏幕会转变成 OnePlus Logo + Fastboot Mode 文本的画面，但过一会儿他就会进入到 TWRP 的界面了。</li><li>如果手机设置了(锁屏密码)，需要输入密码才可访问 data 分区 (数据及你的存储文件)</li><li>出现一个 Keep System Read only? 的询问界面，在这里将最下面的滑块滑动到最右。</li><li>此时 TWRP 已经进入到了主界面，你还可以选择进入 Settings -&gt; Language 设置中文语言。</li></ol><h2 id="使用-TWRP-刷入卡刷包"><a href="#使用-TWRP-刷入卡刷包" class="headerlink" title="使用 TWRP 刷入卡刷包"></a>使用 TWRP 刷入卡刷包</h2><p>使用 TWRP 刷入卡刷包有两种方式。</p><h2 id="从存储空间刷入-Zip-卡刷包"><a href="#从存储空间刷入-Zip-卡刷包" class="headerlink" title="从存储空间刷入 Zip 卡刷包"></a>从存储空间刷入 Zip 卡刷包</h2><ol><li><p>在 TWRP 模式下，同样可以像正常系统那样，使用 MTP 将文件传输至手机存储，这里将 Zip 格式的卡刷包放进去…</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/154651/24/29679/96088/63f06187Fa310e910/8c83f08856f69843.png"></p></li><li><p>当然，你也可以使用上一章学到的内容，使用 adb push Magisk.zip /sdcard 将卡刷包传入内置存储…</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/133079/31/30012/16805/63f06183F91830d01/a5316637f3113a8d.png"></p></li><li><p>一切妥当后，点击主界面上的「安装」，会进入到选择文件的界面，选择刚才放入的 Zip 卡刷包…</p></li><li><p>滑动下面的刷入条，确认刷入！</p></li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/148468/20/33625/159672/63f061bbF728f268f/6742c6ae378ecc17.jpg"></p><h2 id="使用-Sideload-线刷模式刷入"><a href="#使用-Sideload-线刷模式刷入" class="headerlink" title="使用 Sideload 线刷模式刷入"></a>使用 Sideload 线刷模式刷入</h2><p>这个模式一般是在 Data 分区不可访问(比如你刚格式化完)，或者是你懒得把安装包放进去的情况使用。</p><p>只需通过一条 adb 命令就可以自动地将安装包推送到设备并安装。</p><ol><li><p>点击 TWRP 主界面的「设置」，再点击右上角的「ADB Sideload」</p></li><li><p>此时设备就处于 Sideload 模式下了，使用 adb devices 可以看到设备模式处于 sideload</p></li><li><p>执行命令 adb sideload &lt;安装包路径&gt; 就会去安装了…</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/171531/27/29371/124106/63f061deF128cde85/708095aa24e1ff51.jpg"></p></li></ol><p>⚠️注意：如果你通过 TWRP 安装 ROM，或者官方完整包。还想继续刷东西的话，请先在安装完 ROM 后重启到 Bootloader，再次启动 TWRP 再刷其他东西。<br>以及官方完整包不支持 Sideload</p><h2 id="怎么样算安装成功了？"><a href="#怎么样算安装成功了？" class="headerlink" title="怎么样算安装成功了？"></a>怎么样算安装成功了？</h2><p>标题栏上面有写…</p><p>安装包多种多样，全靠作者自己写，一般情况下安装成功的话 TWRP 都会提示安装成功，也就是无任何错误输出…</p><p>如果有错误的话一般都会以红色字体输出</p><p>TWRP 也可以用「下音量键 + 电源键」截图！保存在 /sdcard/Pictures/Screenshots</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/186094/30/31066/95071/63f062f7F97ae1dea/00b0626b335ab13d.jpg"></p><h2 id="安装-Magisk-与-root"><a href="#安装-Magisk-与-root" class="headerlink" title="安装 Magisk 与 root"></a>安装 Magisk 与 root</h2><p>📝Magisk 是什么？</p><p>许多人想到 Magisk 一般都是，可以安装很多模块对系统自定义修改，可以实现 root 权限。实际上也差不多是这样。</p><p>Magisk 提供了一套解决方案对 Android 进行一定程度的自定义修改。除了最基础的提供获取 root 权限的方式意外，它还提供了一个 Systemless 的方案，实现不触碰 system、vendor 等分区的情况下修改对应分区。</p><p>乍一看好像有点矛盾啊？不能碰到分区又要达到修改的目的？</p><p>它的操作大概可以想象成，在启动的时候 Magisk 会创建一个虚拟分区，里面是对应要修改分区的镜像。然后把要修改的操作都在这个虚拟分区里面进行。弄好之后，把真正的分区从对应的挂载点上撤下来，换上虚拟的那一个。</p><p>📝如果不动系统分区的话，它安装到哪了？</p><p>答案是 boot 分区！Android 系统本来是要首先加载 system 分区里面的 init 进程来启动的，但是 Magisk 安装在 boot 分区后，就会强制系统先启动 boot 分区里面的 Magisk 自己的 init，让 Magisk 有机会做一些操作，然后再在去加载原本系统应该要用的 init。</p><p>(大概是这样的，不完全正确，详细的话复杂得多…)</p><p>那么如何安装 Magisk，root 的设备呢…？</p><p>emmm，如果你仔细看的话，应该已经学会了吧？</p><p>🌟所以这里是个人实践时间！</p><p>按照上面的教程，下载文章开头提供的 Magisk 卡刷包，直接刷入重启吧！</p><p>完成之后，你的系统应该会多出一个 App 叫做 Magisk Manager (图标是一个脸谱的样子)</p><p>打开就可以查看当前 Magisk 的安装状态啦！</p><h2 id="卸载-Magisk"><a href="#卸载-Magisk" class="headerlink" title="卸载 Magisk"></a>卸载 Magisk</h2><p>卸载 Magisk 也是很简单的…</p><p>进入 Magisk Manager，点击「卸载」，会出现两个选项。</p><p>分别是「还原原厂镜像」「完全卸载」</p><p>这两个的区别就是第一个会保留你的 Magisk 模块，下次你再安装的话模块还在…</p><p>第二个就是字面意思，完全卸载咯…</p><p>选个你想要的，然后按照说明就可以卸载啦…</p><h2 id="OTA-后保留-Magisk"><a href="#OTA-后保留-Magisk" class="headerlink" title="OTA 后保留 Magisk"></a>OTA 后保留 Magisk</h2><p>一般 OTA 升级后官方都会用一个新的 boot 映像替换掉对应分区，看过上面的扩展阅读你会知道 Magisk 也是对 boot 分区做了一些操作的，那我 OTA 升级之后又要进 TWRP 重新刷一遍吗？</p><p>得益于 OnePlus 7 Pro 的 A/B 分区机制（未来章节会讲），设备将系统分成了 2 个分区，比如 system_a、system_b，同样的 boot 分区也有两个。当前运行的系统是这 A 与 B 之间的其中一个。</p><p>系统执行更新的时候，就会将新的系统安装在未使用的那一个分区，在下次启动后就会启动到另一个分区上。如果启动失败了也会回退到这个还没有更新的分区。这也是为什么的设备不像以前那些年那样，安装个更新就要重启到 Recovery 才能更新。现在更新系统的操作直接在运行的时候内部完成。</p><p>那这样的话，在 OTA 完成之后，同样直接把 Magisk 安装到未使用的那个分区就可以了！</p><p>接下来我就按照官方 Magisk 文档，为大家展示一下操作步骤…</p><p>🌟操作步骤：</p><ol><li><p>首先去「开发者选项」禁用掉「系统自动更新」，避免在你未确认的情况下直接安装 OTA</p></li><li><p>安装 OTA 之前，首先打开 Magisk Manager，点击「卸载」-&gt;「还原原厂镜像」。这样你的 boot 分区恢复到官方的版本。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/174700/20/33727/28603/63f061ffFe3844703/f5e6d3ec2b52f952.png"></p></li><li><p>前往「系统更新」那里安装更新… 安装完之后不要重启！！！返回到 Magisk Manager，点击「安装」-&gt;「安装」-&gt;「安装到未使用的槽位（OTA 后）」，Magisk 就会安装到那个 OTA 更新的槽位。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/15051/39/20354/143419/63f06267F052ffbf4/96a90a1fdb658418.png"></p></li><li><p>安装完成后，点击「重新启动」按钮，系统就会强制启动到那个 OTA 的槽位。你的更新安装好了，Magisk 还保留着哦！</p></li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/157584/25/35188/16894/63f06218F9895bce9/0da9b190ba03bd1f.png"></p><h2 id="卸载-Magisk-重新上锁-BL"><a href="#卸载-Magisk-重新上锁-BL" class="headerlink" title="卸载 Magisk 重新上锁 BL"></a>卸载 Magisk 重新上锁 BL</h2><p>⚠️上锁 Bootloader 会清除手机所有数据！请务必在上锁前将数据妥善备份！</p><p>🌟操作步骤：</p><ol><li>首先要确保你的手机一切分区处于原厂状态！我的建议是直接安装一遍官方系统完整包！用 TWRP 装也是可以的！</li><li>不想重新安一遍系统的话，起码要把 Magisk 先撤掉，进 Magisk Manager -&gt;「卸载」-&gt;「完全卸载」，它会下载一个 Uninstaller 卸载包，然后就会帮你卸载掉了…</li><li>然后连接电脑，用 adb reboot bootloader 进入 Fastboot 模式</li><li>在 Fastboot 模式下，执行 fastboot flashing lock ，和解锁一样，手机将会对你上锁 Bootloader 的操作进行确认。使用音量键选中第二个选项，lock the bootloader再按下电源键将会清除设备数据并重新上锁！</li><li>一切完成重进系统，进入「开发者选项」把「OEM 解锁」关掉。</li></ol><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>❓ 我启动一次 TWRP 之后，以后不可以直接用「音量键 + 电源键」启动 TWRP 吗？</p><p>不可以… 因为这里只是临时将 TWRP 作为启动内核，如果看了上面关于 BL 的介绍就知道，下次启动还是会用 boot 分区里面提供的内核。虽然有办法将 TWRP 打补丁到 boot 分区里面去，但是在这里不是很推荐大家用：因为有很多奇奇怪怪的坑。临时用 TWRP 就可以了！身边没有电脑的情况下就不要随意刷机！</p><p>❓ 我点「安装」看到里面的文件名都是乱码的…</p><p>？？？开头要输入密码的那个界面输错了…<br>重新启动到 Bootloader，再次启动 TWRP，输入正确密码吧…</p><h2 id="本章总结"><a href="#本章总结" class="headerlink" title="本章总结"></a>本章总结</h2><p>解锁 OnePlus 7 Pro 的 Bootloader，通过 FastBoot 启动 TWRP，使用 TWRP 安装 Zip 卡刷包。同时安装 Magisk 到手机上，更新之后怎么保留 Magisk，怎么卸载和上锁。</p>]]></content>
    
    
    <summary type="html">OnePlus 7 Pro 刷机教程 - 第二章</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="刷机" scheme="https://couurh.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>OnePlus 7 Pro 刷机教程 - 第一章</title>
    <link href="https://couurh.github.io/posts/55c779ae.html"/>
    <id>https://couurh.github.io/posts/55c779ae.html</id>
    <published>2020-06-13T02:35:00.000Z</published>
    <updated>2023-02-18T07:33:50.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是-adb"><a href="#什么是-adb" class="headerlink" title="什么是 adb ?"></a>什么是 adb ?</h2><p>adb 全称为 Android Debug Bridge (Android 调试桥)，是可以让你在电脑与设备之间的通讯开发工具。具体怎么样我也不知道啦，反正我用 adb 主要就是来推拉文件开 shell XD。<br>通过 adb help 命令便可查看大部分命令的用途。在最后我将会介绍一些比较常用的 adb 命令。</p><h2 id="什么是-fastboot-？"><a href="#什么是-fastboot-？" class="headerlink" title="什么是 fastboot ？"></a>什么是 fastboot ？</h2><p>fastboot 是用于对 Android 设备分区进行刷写擦除操作的工具，它也可以让设备使用自定义的 Kernel 映像来启动。<br>说的不明不白，总之就是对分区操作，然后也可以直接 boot img 文件让手机用自定义内核启动。<br>通过 fastboot -h 命令便可查看大部分命令的用途。</p><h2 id="举个简单的例子用用？"><a href="#举个简单的例子用用？" class="headerlink" title="举个简单的例子用用？"></a>举个简单的例子用用？</h2><p>玩着手机，突然想刷个 ROM 。随后把手机连接到电脑，电脑上使用 adb reboot bootloader 重启到 Fastboot 模式。然后用 fastboot boot TWRP.img 进入 TWRP，格式化 Data，哎呀 ROM 忘记刷了，但是这里 Data 处于不可用状态了…，就打开 TWRP 的 Sideload 模式。使用 adb sideload ROM.zip 把 ROM 线刷进去。重启。完成！</p><h2 id="安装-adb-与-fastboot"><a href="#安装-adb-与-fastboot" class="headerlink" title="安装 adb 与 fastboot"></a>安装 adb 与 fastboot</h2><p>许多用户使用 adb 与 fastboot 的方式或许是在程序所在文件夹 Shift 右键开一个 PowerShell 或命令提示符。或者是 Ctrl + R 运行 cmd 然后再使用 cd 命令切换到目标目录。<br>这样的方式未免有些麻烦，接下来将介绍在 Windows 系统下通过添加 PATH 环境变量实现直接调用 adb 的方法。<br>📝这里说的直接调用指的是无需再将当前路径切换至程序目录，或者手动指定路径去启动程序<br>比如：D:\platform-tools\adb.exe help<br>而是直接输入程序名称便可自动在 PATH 环境变量中的目录中寻找到目标程序执行。<br>比如：adb help</p><h2 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h2><ol><li><p>下载由 Google 为 Windows 系统提供的 platform-tools 压缩包<br>在此处下载：<a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">查看链接</a><br>📝platform-tools 是 Android SDK 的一个组件。它包含与 Android 平台进行交互的工具。<br>所以 adb 和 fastboot 是里面的一部分。<br>详细内容请查阅：<a href="https://developer.android.com/studio/releases/platform-tools">查看链接</a></p></li><li><p>将压缩包内的 platform-tools 文件夹解压至某处，比如 D:\platform-tools</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/190796/38/31851/38429/63f06132F0d24c4b3/7654d5310662db48.jpg"></p></li><li><p>在桌面右击「计算机」，点击「属性」</p></li><li><p>在左侧菜单选择「高级系统设置」</p></li><li><p>在弹出的「系统属性」窗口中，点选「高级」选项卡，再点击下面「环境变量」按钮</p></li><li><p>在「环境变量」窗口中，在「系统变量」那一栏找到变量名为 PATH 的一行，随后点击下面的编辑按钮。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/127548/4/34774/35074/63f06161F2f8a1603/7c5d462e5e223817.jpg"></p></li><li><p>在「编辑环境变量」窗口中，点击「浏览」按钮，随后定位 platform-tools 的位置，再点击「确定」</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/126460/16/28831/27649/63f06161Fc6237d02/6aa3000c6d1881f5.jpg"></p></li></ol><p>📝在老旧的 Windows 系统中可能并没有这么漂亮的列表框界面,只有一个文本框里面有一堆目录文本。此时你需要在最末尾处添加 ;D:\platform-tools 然后确定。（不要漏了最前面的分号！）</p><h2 id="使用-adb-与-fastboot-命令"><a href="#使用-adb-与-fastboot-命令" class="headerlink" title="使用 adb 与 fastboot 命令"></a>使用 adb 与 fastboot 命令</h2><p>完成上述操作后，你就可以直接通过 cmd 使用 adb 与 fastboot 工具了！<br>由于 adb 与 fastboot 是命令行工具，Windows 系统上需要使用 cmd 命令提示符来执行这两项命令。<br>📝并不是必须要在「命令提示符」内才可正确执行。只是因为它执行后的结果并不会通过图形窗口的方式展现给大家，在「命令提示符」内就可以看到它执行后输出的结果…<br>了解 Shell/Terminal 相关知识的应该知道我在讲什么，大家也可以自行去搜索一下2333</p><ol><li><p>按下「Windows 徽标 + R」键，在「运行」窗口中输入 cmd 并回车打开 「命令提示符」</p></li><li><p>在弹出的黑框框里面输入 adb version 查看 adb 版本，若能正确显示便安装成功！</p></li><li><p>同样，输入 fastboot –version 查看 fastboot 版本，也是可以正常执行的。</p></li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/176165/17/33025/31540/63f06162Fd8e965a2/3b17622352e1a699.jpg"></p><p>之后要想使用 adb 与 fastboot 就是通过这种方式来使用啦！<br>📝随便提一嘴，请不要漏掉 adb 后面的空格！<br>adb 是程序名，以空格分割后面的为参数。<br>如：adb push pic.jpg /sdcard/<br>这条命令共有三个参数：push 为推送文件的指令；pic.jpg 是被推送的文件；/sdcard/ 是目标目录 (在这里为内置存储)<br>所以就是将当前目录的 pic.jpg 文件推送至设备的内置存储根目录下。<br>因为之前真的有见到过没看到空格就粘在一起打上去的情况，在这里就提醒一下…</p><h2 id="关于驱动…"><a href="#关于驱动…" class="headerlink" title="关于驱动…."></a>关于驱动….</h2><p>Windows 系统上 adb 驱动应该是自带的，而 fastboot 驱动理论上来说会由 Windows 联网自行安装。<br>所以这一块没啥好说的… 进入 fastboot 模式后让 Windows 自行搜索安装就 OK 了…<br>可以在「设备管理器」里面查看设备情况。</p><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/119512/15/29393/42705/63f06161F6a87447a/20b124449d332b1e.jpg"></p><h2 id="在手机上设置使用-adb-的环境"><a href="#在手机上设置使用-adb-的环境" class="headerlink" title="在手机上设置使用 adb 的环境"></a>在手机上设置使用 adb 的环境</h2><p>要想使用 adb ，你还需要在设备上的「开发者选项」内启用「USB 调试」功能。</p><ol><li>打开系统设置，选择「关于手机」</li><li>连续快速点击「版本号」4 次，会出现「已开启开发者模式」的提示，若设置了锁屏密码你还需要验证才可开启。</li><li>返回系统设置，点击「系统」，随后点击「开发者选项」</li><li>往下滑动，找到「USB 调试」选项，然后开启！</li><li>将手机连接至你的计算机。</li><li>按照上面讲过的方式，执行 adb devices 命令查看正确连接的设备列表</li><li>此时你的手机上应该会弹出一个「允许 USB 调试吗？」的弹窗，勾选「一律允许」的选择框，随后点击「允许」就 OK 了。</li><li>此时，cmd 内也应正常列出连接的设备列表。</li></ol><p><img src="https://kjimg10.360buyimg.com/ott/jfs/t1/207726/33/29162/21614/63f06222Ff3fb7970/9ac1769dcdaf6e2b.jpg"></p><p>若设备状态为「device」即为正常连接。<br>📝常见设备状态:<br>device 正常连接<br>unauthorized 未授权<br>recovery 设备处于 Recovery 模式<br>sideload 设备处于 sideload 线刷模式<br>offline 不在线</p><h2 id="设置-fastboot"><a href="#设置-fastboot" class="headerlink" title="设置 fastboot"></a>设置 fastboot</h2><p>Fastboot 没有什么特别好说的，进入设备的 Fastboot 模式，让系统自动安装驱动就可以了。<br>进入手机的 Fastboot 模式后连接至电脑，直接使用 fastboot devices 查看设备列表就 OK 了。<br>📝以 OnePlus 7 Pro 举例：<br>关机状态下按住 音量键加 + 音量键减号 + 电源键，直到出现 OnePlus Logo 与 Fastboot Mode 的提示。<br>再执行上述命令。<br>注意！是两个音量键一起按啊！！！</p><h2 id="常用的-adb-指令"><a href="#常用的-adb-指令" class="headerlink" title="常用的 adb 指令"></a>常用的 adb 指令</h2><p>- adb shell - 在设备中开一个 shell (就好像 Windows 的 cmd)<br>- adb connect &lt;IP 地址&gt; - 通过 USB 网络调试连接设备（有些手机需要 root 权限以及额外的 App）<br>- adb push &lt;本地文件&gt; &lt;目标文件&gt; - 将 &lt;本地文件&gt; 推送至设备的 &lt;目标文件&gt;<br>如 adb push D:\a.png /sdcard/ - 将 D:\a.png 推送至设备存储根目录。<br>- adb pull &lt;目标文件&gt; &lt;本地文件&gt; - 将设备 &lt;目标文件&gt; 拉取到 &lt;本地文件&gt;。如果 &lt;本地文件&gt; 未指定，则拉取到当前文件夹。<br>- adb logcat - 实时查看设备日志。<br>- adb install &lt;APK文件&gt; - 将 APK 安装包安装到设备上。<br>更多命令用法查看 adb help</p><h2 id="常用的-fastboot-指令"><a href="#常用的-fastboot-指令" class="headerlink" title="常用的 fastboot 指令"></a>常用的 fastboot 指令</h2><p>Fastboot 指令其实不是很常用，一般情况下只是用来启动自定义 Kernel (比如 TWRP)，通常接下来的刷机操作是直接在 TWRP 进行的了。但是这里就随便说几条。<br>- fastboot flash &lt;分区&gt; &lt;IMG 文件&gt; - 将文件系统 IMG 映像文件刷入分区<br>- fastboot boot &lt;Kernel IMG 文件&gt; - 使用自定义的 Kernel 映像文件作为内核启动设备<br>- fastboot –set-active-slot=a - 将当前槽位设置为 a，(A/B 分区设备)<br>- fastboot oem unlock/lock - 解锁(unlock)或锁定(lock) 设备 Bootloader</p>]]></content>
    
    
    <summary type="html">OnePlus 7 Pro 刷机教程 - 第一章</summary>
    
    
    
    <category term="实用技巧" scheme="https://couurh.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="刷机" scheme="https://couurh.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://couurh.github.io/posts/4a17b156.html"/>
    <id>https://couurh.github.io/posts/4a17b156.html</id>
    <published>2020-06-06T02:00:00.000Z</published>
    <updated>2023-02-18T06:59:25.918Z</updated>
    
    <content type="html"><![CDATA[<p>一切正好，确信相逢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#include &lt;iostream&gt;</span><br>using namespace std;<br><br><span class="hljs-built_in">int</span> main() &#123;<br>    cout &lt;&lt; <span class="hljs-string">&quot;你好世界&quot;</span> &lt;&lt; endl;<br>    cout &lt;&lt; <span class="hljs-string">&quot;Hello World&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">一切正好，确信相逢</summary>
    
    
    
    
  </entry>
  
</feed>
